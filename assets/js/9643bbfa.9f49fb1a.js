"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[622],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return u}});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),s=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},c=function(e){var n=s(e.components);return o.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),m=s(t),u=a,k=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return t?o.createElement(k,p(p({ref:n},c),{},{components:t})):o.createElement(k,p({ref:n},c))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,p=new Array(i);p[0]=m;var r={};for(var l in n)hasOwnProperty.call(n,l)&&(r[l]=n[l]);r.originalType=e,r.mdxType="string"==typeof e?e:a,p[1]=r;for(var s=2;s<i;s++)p[s]=t[s];return o.createElement.apply(null,p)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1206:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return u}});var o=t(7462),a=t(3366),i=(t(7294),t(3905)),p=t.p+"assets/images/demo1-e395e884114b85356f600b519382676d.png",r=t.p+"assets/images/demo2-1f4b6bb80982173559050b56e5455e1c.png",l=t.p+"assets/images/demo3-bc90ce4942b1404bfe6707c714d052ca.png",s=["components"],c={id:"recomposeWorkingPrinciple",title:"\u91cd\u7ec4\u7684\u5de5\u4f5c\u6d41\u7a0b"},d=void 0,m={unversionedId:"principle/recomposeWorkingPrinciple",id:"principle/recomposeWorkingPrinciple",title:"\u91cd\u7ec4\u7684\u5de5\u4f5c\u6d41\u7a0b",description:"\u6211\u4eec\u90fd\u77e5\u9053 Jetpack Compose \u662f\u4e00\u5957\u58f0\u660e\u5f0f UI \u7cfb\u7edf\uff0c\u5f53 UI \u7ec4\u4ef6\u6240\u4f9d\u8d56\u7684\u72b6\u6001\u53d1\u751f\u6539\u53d8\u65f6\u4f1a\u81ea\u52a8\u53d1\u751f\u91cd\u7ed8\u5237\u65b0\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u5b98\u65b9\u79f0\u4f5c\u91cd\u7ec4\uff0c\u524d\u9762\u5df2\u7ecf\u603b\u7ed3\u8fc7 Compose \u7684\u91cd\u7ec4\u8303\u56f4\uff0c\u4ee5\u53ca \u91cd\u7ec4\u8fc7\u7a0b\u4f7f\u7528\u7684Snapshot\u3002\u672c\u6587\u5c06\u5e26\u9886\u5927\u5bb6\u6765\u770b\u770b Compose \u6e90\u7801\u4e2d\u4ece\u72b6\u6001\u66f4\u65b0\u5230 recompose \u8fc7\u7a0b\u5728\u6e90\u7801\u4e2d\u662f\u5982\u4f55\u8fdb\u884c\u7684\uff0c\u5e76\u4e14\u8bb2\u89e3\u5feb\u7167\u7cfb\u7edf\u5728 recompose \u8fc7\u7a0b\u4e2d\u5982\u4f55\u88ab\u4f7f\u7528\u5230\u7684\u3002",source:"@site/docs/principle/recomposeWorkingPrinciple.mdx",sourceDirName:"principle",slug:"/principle/recomposeWorkingPrinciple",permalink:"/docs/principle/recomposeWorkingPrinciple",editUrl:"https://github.com/compose-museum/jetpack-compose-book/tree/master/docs/principle/recomposeWorkingPrinciple.mdx",tags:[],version:"current",frontMatter:{id:"recomposeWorkingPrinciple",title:"\u91cd\u7ec4\u7684\u5de5\u4f5c\u6d41\u7a0b"},sidebar:"docs",previous:{title:"\u900f\u8fc7 Snapshot \u770b\u91cd\u7ec4",permalink:"/docs/principle/snapshot"},next:{title:"Compose \u8fd0\u884c\u539f\u7406\u4e0e GapBuffer",permalink:"/docs/principle/gapBuffer"}},u=[{value:"\u610f\u4e49",id:"\u610f\u4e49",children:[],level:2},{value:"recompose \u6d41\u7a0b\u5206\u6790",id:"recompose-\u6d41\u7a0b\u5206\u6790",children:[{value:"\u4ece MutableState \u66f4\u65b0\u5f00\u59cb",id:"\u4ece-mutablestate-\u66f4\u65b0\u5f00\u59cb",children:[],level:3},{value:"GlobalSnapshot \u5199\u5165\u901a\u77e5",id:"globalsnapshot-\u5199\u5165\u901a\u77e5",children:[{value:"sendApplyNotifications",id:"sendapplynotifications",children:[],level:4},{value:"applyObservers\u4e4brecompositionRunne",id:"applyobservers\u4e4brecompositionrunne",children:[],level:4},{value:"runRecomposeAndApplyChanges \u4e09\u6b65\u9aa4",id:"runrecomposeandapplychanges-\u4e09\u6b65\u9aa4",children:[],level:4},{value:"performRecompose",id:"performrecompose",children:[],level:4},{value:"takeMutableSnapshot \u8bfb\u89c2\u5bdf\u8005\u4e0e\u5199\u89c2\u5bdf\u8005",id:"takemutablesnapshot-\u8bfb\u89c2\u5bdf\u8005\u4e0e\u5199\u89c2\u5bdf\u8005",children:[],level:4}],level:3},{value:"MutableSnapshot \u5199\u5165\u901a\u77e5",id:"mutablesnapshot-\u5199\u5165\u901a\u77e5",children:[{value:"applyAndCheck",id:"applyandcheck",children:[],level:4},{value:"apply\u4e2d\u4f7f\u7528\u7684applyObservers",id:"apply\u4e2d\u4f7f\u7528\u7684applyobservers",children:[],level:4}],level:3}],level:2}],k={toc:u};function h(e){var n=e.components,t=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,o.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u6211\u4eec\u90fd\u77e5\u9053 Jetpack Compose \u662f\u4e00\u5957\u58f0\u660e\u5f0f UI \u7cfb\u7edf\uff0c\u5f53 UI \u7ec4\u4ef6\u6240\u4f9d\u8d56\u7684\u72b6\u6001\u53d1\u751f\u6539\u53d8\u65f6\u4f1a\u81ea\u52a8\u53d1\u751f\u91cd\u7ed8\u5237\u65b0\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u5b98\u65b9\u79f0\u4f5c",(0,i.kt)("strong",{parentName:"p"},"\u91cd\u7ec4"),"\uff0c\u524d\u9762\u5df2\u7ecf\u603b\u7ed3\u8fc7 ",(0,i.kt)("a",{parentName:"p",href:"./recompositionScope/"},"Compose \u7684\u91cd\u7ec4\u8303\u56f4"),"\uff0c\u4ee5\u53ca ",(0,i.kt)("a",{parentName:"p",href:"./snapshot/"},"\u91cd\u7ec4\u8fc7\u7a0b\u4f7f\u7528\u7684Snapshot"),"\u3002\u672c\u6587\u5c06\u5e26\u9886\u5927\u5bb6\u6765\u770b\u770b Compose \u6e90\u7801\u4e2d\u4ece\u72b6\u6001\u66f4\u65b0\u5230 recompose \u8fc7\u7a0b\u5728\u6e90\u7801\u4e2d\u662f\u5982\u4f55\u8fdb\u884c\u7684\uff0c\u5e76\u4e14\u8bb2\u89e3\u5feb\u7167\u7cfb\u7edf\u5728 recompose \u8fc7\u7a0b\u4e2d\u5982\u4f55\u88ab\u4f7f\u7528\u5230\u7684\u3002"),(0,i.kt)("h2",{id:"\u610f\u4e49"},"\u610f\u4e49"),(0,i.kt)("p",null,"\u672c\u6587\u901a\u8fc7\u9605\u8bfb\u6e90\u7801\u6765\u89e3\u8bfb recompose \u6d41\u7a0b\uff0c\u9605\u8bfb\u6e90\u7801\u5176\u5b9e\u662f\u4e00\u4e2a\u975e\u5e38\u67af\u71e5\u7684\u8fc7\u7a0b\uff0c\u6e90\u7801\u4e2d\u5b58\u5728\u7740\u5927\u91cf\u903b\u8f91\u5206\u652f\u5bfc\u81f4\u8bb8\u591a\u4eba\u770b\u7740\u770b\u7740\u5c31\u88ab\u7ed5\u6655\u4e86\u3002\u672c\u6587\u5254\u9664\u4e86\u6240\u6709\u4e0e\u4e3b\u7ebf\u6d41\u7a0b\u65e0\u5173\u7684\u903b\u8f91\u5206\u652f\uff0c\u5e76\u7ed3\u5408\u914d\u56fe\u8fdb\u884c\u903b\u8f91\u8868\u8fbe\uff0c\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3 recompose \u5de5\u4f5c\u539f\u7406\u3002\u901a\u8fc7\u8fd9\u7bc7\u6587\u7ae0\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u5bf9 recompose\u5de5\u4f5c\u539f\u7406\u4ea7\u751f\u4e00\u79cd\u611f\u6027\u8ba4\u77e5\uff0c\u5e76\u5728\u672c\u6587\u7684\u57fa\u7840\u4e0a\u80fd\u591f\u7ee7\u7eed\u6df1\u5165\u63a2\u7d22recompose\u6d41\u7a0b\u4e2d\u7684\u5404\u79cd\u6280\u672f\u7ec6\u8282\u3002"),(0,i.kt)("p",null," \u26a0\ufe0f Tips\uff1a\u7531\u4e8e recompose \u6d41\u7a0b\u5341\u5206\u590d\u6742\uff0c\u672c\u6587\u76ee\u524d\u4ec5\u5bf9 recompose \u4e3b\u7ebf\u6d41\u7a0b\u8fdb\u884c\u4e86\u63cf\u8ff0\uff0c\u5176\u4e2d\u5305\u542b\u7684\u8bb8\u591a\u6280\u672f\u7ec6\u8282\u6ca1\u6709\u6df1\u6316\u3002\u7531\u4e8e\u672c\u4eba\u91c7\u7528\u52a8\u9759\u7ed3\u5408\u65b9\u5f0f\u8fdb\u884c\u6e90\u7801\u5206\u6790\uff0c\u96be\u514d\u51fa\u73b0\u6709\u4e9bcase\u6d41\u7a0b\u6ca1\u6709\u8986\u76d6\u5230\u7684\u60c5\u51b5\uff0c\u5982\u679c\u6587\u7ae0\u5b58\u5728\u9519\u8bef\u6b22\u8fce\u63d0\u51fa\u3002"),(0,i.kt)("h2",{id:"recompose-\u6d41\u7a0b\u5206\u6790"},"recompose \u6d41\u7a0b\u5206\u6790"),(0,i.kt)("h3",{id:"\u4ece-mutablestate-\u66f4\u65b0\u5f00\u59cb"},"\u4ece MutableState \u66f4\u65b0\u5f00\u59cb"),(0,i.kt)("p",null,"\u5f53\u4f60\u4e3a MutableState \u8d4b\u503c\u65f6\u5c06\u4f1a\u9ed8\u8ba4\u8c03\u7528 MutableState \u7684\u6269\u5c55\u65b9\u6cd5 ",(0,i.kt)("inlineCode",{parentName:"p"},"MutableState.setValue")," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.SnapshotState\ninline operator fun <T> MutableState<T>.setValue(thisObj: Any?, property: KProperty<*>, value: T) {\n    this.value = value\n}\n")),(0,i.kt)("p",null,"\u901a\u8fc7\u67e5\u770b ",(0,i.kt)("inlineCode",{parentName:"p"},"mutableStateOf")," \u6e90\u7801\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 MutableState \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"SnapshotMutableStateImpl")," \u7c7b\u578b\u5b9e\u4f8b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.SnapshotState\nfun <T> mutableStateOf(\n    value: T,\n    policy: SnapshotMutationPolicy<T> = structuralEqualityPolicy()\n): MutableState<T> = createSnapshotMutableState(value, policy)\n\n// androidx.compose.runtime.ActualAndroid.android\ninternal actual fun <T> createSnapshotMutableState(\n    value: T,\n    policy: SnapshotMutationPolicy<T>\n): SnapshotMutableState<T> = ParcelableSnapshotMutableState(value, policy)\n\n// androidx.compose.runtime.ParcelableSnapshotMutableState\ninternal class ParcelableSnapshotMutableState<T>(\n    value: T,\n    policy: SnapshotMutationPolicy<T>\n) : SnapshotMutableStateImpl<T>(value, policy), Parcelable \n")),(0,i.kt)("p",null,"\u5f53 ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," \u5c5e\u6027\u53d1\u751f\u6539\u53d8\u65f6\u4f1a\u8c03\u7528\u8fd9\u4e2a\u5c5e\u6027\u7684 setter \uff0c\u5f53\u7136\u5982\u679c\u8bfb\u53d6\u72b6\u6001\u65f6\u4e5f\u4f1a\u8d70 getter\u3002"),(0,i.kt)("p",null,"\u6b64\u65f6\u7684next\u662f\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"StateStateRecord")," \u5b9e\u4f8b\uff0c\u5176\u771f\u6b63\u8bb0\u5f55\u7740\u5f53\u524dstate\u72b6\u6001\u4fe1\u606f(\u901a\u8fc7\u5f53\u524dvalue\u7684getter\u4e0esetter\u5c31\u53ef\u4ee5\u770b\u51fa)\u3002\u6b64\u65f6\u9996\u5148\u4f1a\u5bf9\u5f53\u524d\u503c\u548c\u8981\u66f4\u65b0\u7684\u503c\u6839\u636e\u89c4\u5219\u8fdb\u884cdiff\u5224\u65ad\u3002\u5f53\u786e\u5b9a\u53d1\u751f\u6539\u53d8\u65f6\u4f1a\u8c03\u7528\u5230 StateStateRecord \u7684 overwritable \u65b9\u6cd5\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'// androidx.compose.runtime.SnapshotState\ninternal open class SnapshotMutableStateImpl<T>(\n    value: T,\n    override val policy: SnapshotMutationPolicy<T>\n) : StateObject, SnapshotMutableState<T> {\n    @Suppress("UNCHECKED_CAST")\n    override var value: T\n        get() = next.readable(this).value\n        set(value) = next.withCurrent {\n            if (!policy.equivalent(it.value, value)) {\n                // \u6b64\u65f6\u7684this\u8fd8\u662f\u5f53\u524dSnapshotMutableStateImpl\n                next.overwritable(this, it) { \n                  this.value = value // \u6b64\u65f6\u7684this\u6307\u5411\u7684next\uff0c\u8fd9\u90e8\u64cd\u4f5c\u4e5f\u5c31\u662f\u66f4\u65b0next\u5176\u4e2d\u7684value\n                } \n            }\n        }\n        ...\n    private var next: StateStateRecord<T> = StateStateRecord(value)\n}\n')),(0,i.kt)("p",null,"\u63a5\u4e0b\u6765\u4f1a\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"Snapshot.current")," \u83b7\u53d6\u5f53\u524d\u4e0a\u4e0b\u6587\u4e2d\u7684 Snapshot\uff0c\u5982\u679c\u4f60\u5bf9 mutableState \u66f4\u65b0\u64cd\u4f5c\u5728\u5f02\u6b65\u6267\u884c\u4ee3\u7801\u5757\u4e2d\uff0c\u7531\u4e8e\u6211\u4eec\u77e5\u9053 Snapshot \u662f\u4e00\u4e2a ThreadLocal \u6b64\u65f6\u4f1a\u8fd4\u56de\u5f53\u524d\u6267\u884c\u7ebf\u7a0b\u7684 Snapshot\uff0c\u5f53\u82e5\u5f53\u524d\u6267\u884c\u7ebf\u7a0b\u7684 Snapshot \u4e3a\u7a7a\u65f6\u9ed8\u8ba4\u8fd4\u56de ",(0,i.kt)("inlineCode",{parentName:"p"},"GlobalSnapshot"),"\uff0c\u5982\u679c\u4f60\u5bf9 mutableState \u66f4\u65b0\u64cd\u4f5c\u76f4\u63a5\u5728 Composable \u4e2d\uff0c\u5f53\u524d Composable \u6267\u884c\u7ebf\u7a0b\u7684 Snapshot \u5c31\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"MutableSnapshot"),"\u3002\u8fd9\u5c06\u4f1a\u5f71\u54cd\u5230\u540e\u7eed recompose \u7684\u6267\u884c\u6d41\u7a0b\u3002"),(0,i.kt)("p",null," \u26a0\ufe0f Tips\uff1aGlobalSnapshot \u5b9e\u9645\u4e0a\u662f MutableSnapShot \u7684\u5b50\u7c7b"),(0,i.kt)("img",{src:p}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.snapshots.Snapshot\ninternal inline fun <T : StateRecord, R> T.overwritable(\n    state: StateObject,\n    candidate: T,\n    block: T.() -> R\n): R {\n    var snapshot: Snapshot = snapshotInitializer\n    return sync {\n        snapshot = Snapshot.current\n        this.overwritableRecord(state, snapshot, candidate).block() // \u66f4\u65b0 next\n    }.also {\n        notifyWrite(snapshot, state) // \u5199\u5165\u901a\u77e5\n    }\n}\n")),(0,i.kt)("p",null,"\u6211\u4eec\u8fdb\u5165 ",(0,i.kt)("inlineCode",{parentName:"p"},"overwritableRecord ")," \u770b\u770b\u5176\u4e2d\u505a\u4e86\u4ec0\u4e48\uff0c\u6ce8\u610f\u6b64\u65f6 state \u5176\u5b9e\u662f mutableState\u3002\u5728\u8fd9\u5176\u4e2d\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"recordModified")," \u65b9\u6cd5\u8bb0\u5f55\u4e86\u4fee\u6539\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6b64\u65f6\u5c06\u5f53\u524d\u4fee\u6539\u7684 state \u6dfb\u52a0\u5230\u5f53\u524d Snapshot \u7684 modified \u4e2d\u4e86\uff0c\u8fd9\u4e2a\u540e\u7eed\u4f1a\u7528\u5230\u7684\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.snapshots.Snapshot\ninternal fun <T : StateRecord> T.overwritableRecord(\n    state: StateObject,\n    snapshot: Snapshot,\n    candidate: T\n): T {\n    if (snapshot.readOnly) {\n        snapshot.recordModified(state)\n    }\n    val id = snapshot.id\n\n    if (candidate.snapshotId == id) return candidate\n\n    val newData = newOverwritableRecord(state, snapshot)\n    newData.snapshotId = id\n\n    snapshot.recordModified(state) // \u8bb0\u5f55\u4fee\u6539\n\n    return newData\n}\n\n// androidx.compose.runtime.snapshots.Snapshot\noverride fun recordModified(state: StateObject) {\n    (modified ?: HashSet<StateObject>().also { modified = it }).add(state)\n}\n")),(0,i.kt)("p",null,"\u53ef\u80fd\u4f60\u5bf9 mutableState \u66f4\u65b0\u64cd\u4f5c\u662f\u5426\u5728 ComposeScope \u4e2d\u800c\u611f\u5230\u56f0\u60d1\uff0c\u4e3e\u4e2a\u4f8b\u5b50\u5176\u5b9e\u5c31\u660e\u767d\u4e86\u3002recompose \u80fd\u591f\u6267\u884c\u5230\u5c31\u5728 ComposeScope \u4e2d\uff0c\u4e0d\u80fd\u6267\u884c\u5230\u5c31\u4e0d\u5728 ComposeScope \u4e2d\u3002"),(0,i.kt)("p",null,"\u8fd9\u4e2a\u5728\u540e\u9762 ",(0,i.kt)("a",{parentName:"p",href:"#takemutablesnapshot"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("em",{parentName:"strong"},"takeMutableSnapshot\u8bfb\u89c2\u5bdf\u8005\u4e0e\u5199\u89c2\u5bdf\u8005"))," ")," \u90e8\u5206\u662f\u4f1a\u8fdb\u884c\u89e3\u91ca\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'var display by mutableStateOf("Init")\n@Preview\n@Composable\nfun Demo() {\n    Text (\n        text = display,\n        fontSize = 50.sp,\n        modifier = Modifier.clickable {\n            display = "change" // recompose\u4e0d\u80fd\u6267\u884c\u5230\uff0c\u6b64\u65f6\u662f GlobalSnapshot\n        }\n    )\n    display = "change" // recompose\u80fd\u591f\u6267\u884c\u5230\uff0c\u6b64\u65f6\u662f MutableSnapShot\n}\n')),(0,i.kt)("p",null,"\u63a5\u4e0b\u6765\u5c31\u662f\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"notifyWrite")," \u6267\u884c\u4e8b\u4ef6\u901a\u77e5\u6b64\u65f6\u53ef\u4ee5\u770b\u5230\u8c03\u7528\u4e86\u5199\u89c2\u5bdf\u8005 ",(0,i.kt)("inlineCode",{parentName:"p"},"writeObserver")," \u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.snapshots.Snapshot\n@PublishedApi\ninternal fun notifyWrite(snapshot: Snapshot, state: StateObject) {\n    snapshot.writeObserver?.invoke(state)\n}\n")),(0,i.kt)("p",null,"\u6b64\u65f6\u4f1a\u6839\u636e\u5f53\u524d Snapshot \u4e0d\u540c\u800c\u8c03\u7528\u5230\u4e0d\u540c\u7684\u5199\u89c2\u5bdf\u8005 ",(0,i.kt)("inlineCode",{parentName:"p"},"writeObserver")," \u3002"),(0,i.kt)("h3",{id:"globalsnapshot-\u5199\u5165\u901a\u77e5"},"GlobalSnapshot \u5199\u5165\u901a\u77e5"),(0,i.kt)("p",null,"\u5168\u5c40\u7684\u5199\u5165\u89c2\u5bdf\u8005\u662f\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"setContent")," \u65f6\u5c31\u8fdb\u884c\u4e86\u6ce8\u518c\uff0c \u6b64\u65f6\u4f1a\u56de\u8c03 registerGlobalWriteObserver \u7684\u5c3elambda\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u5c31\u4e00\u4e2achannel (\u6ca1\u9519\u5c31\u662fKotlin\u534f\u7a0b\u90a3\u4e2a\u70ed\u6570\u636e\u901a\u9053Channel)\uff0c\u6211\u95e8\u53ef\u4ee5\u770b\u5230\u5f88\u5bb9\u6613\u770b\u5230\u5728\u4e0a\u65b9\u4ee5AndroidUiDispatcher.Main \u4f5c\u4e3a\u8c03\u5ea6\u5668\u7684 CoroutineScope \u4e2d\u8fdb\u884c\u4e86\u6302\u8d77\u7b49\u5f85\u6d88\u8d39\uff0c\u6240\u4ee5\u6267\u884c\u6d41\u7a0b\u81ea\u7136\u4f1a\u8fdb\u5230\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"sendApplyNotifications()")," \u3002 \uff08AndroidUiDispatcher.Main \u4e0e Choreographer \u606f\u606f\u76f8\u5173\uff0c\u7bc7\u5e45\u6709\u9650\u5c31\u4e0d\u5c55\u5f00\u8ba8\u8bba\u4e86\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u81ea\u5df1\u53bb\u8ddf\u6e90\u7801\uff09"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"internal object GlobalSnapshotManager {\n    private val started = AtomicBoolean(false)\n\n    fun ensureStarted() {\n        if (started.compareAndSet(false, true)) {\n            val channel = Channel<Unit>(Channel.CONFLATED)\n            CoroutineScope(AndroidUiDispatcher.Main).launch {\n                channel.consumeEach {\n                    Snapshot.sendApplyNotifications()\n                }\n            }\n            Snapshot.registerGlobalWriteObserver {\n                channel.offer(Unit)\n            }\n        }\n    }\n}\n")),(0,i.kt)("h4",{id:"sendapplynotifications"},"sendApplyNotifications"),(0,i.kt)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8fdb\u5165 ",(0,i.kt)("inlineCode",{parentName:"p"},"sendApplyNotifications()")," \u5176\u4e2d\u770b\u770b\u505a\u4e86\u4ec0\u4e48\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u4f7f\u7528\u6211\u4eec\u524d\u9762\u63d0\u5230\u7684\u90a3\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"modified")," \uff0c\u5f53\u53d1\u751f\u4fee\u6539\u65f6 changes \u5fc5\u7136\u4e3a true\uff0c\u6240\u4ee5\u63a5\u7740\u4f1a\u8c03\u7528\u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"advanceGlobalSnapshot")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.snapshots.Snapshot\nfun sendApplyNotifications() {\n        val changes = sync {\n            currentGlobalSnapshot.get().modified?.isNotEmpty() == true\n    }\n    if (changes)\n            advanceGlobalSnapshot()\n}\n")),(0,i.kt)("p",null,"\u6211\u4eec\u7ee7\u7eed\u5f80\u4e0b\u8ddf\u4e0b\u53bb\u8d70\u5230\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"advanceGlobalSnapshot")," \uff0c\u6b64\u65f6\u5c06\u6240\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"modified")," \u53d6\u51fa\u5e76\u4fbf\u5229\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"applyObservers")," \u4e2d\u5305\u542b\u7684\u6240\u6709\u89c2\u5bdf\u8005\u3002 "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.snapshots.Snapshot\nprivate fun advanceGlobalSnapshot() = advanceGlobalSnapshot { }\n\nprivate fun <T> advanceGlobalSnapshot(block: (invalid: SnapshotIdSet) -> T): T {\n    val previousGlobalSnapshot = currentGlobalSnapshot.get()\n    val result = sync {\n        takeNewGlobalSnapshot(previousGlobalSnapshot, block)\n    }\n    val modified = previousGlobalSnapshot.modified\n    if (modified != null) {\n        val observers: List<(Set<Any>, Snapshot) -> Unit> = sync { applyObservers.toMutableList() }\n        observers.fastForEach { observer ->\n            observer(modified, previousGlobalSnapshot)\n        }\n    }\n    ....\n    return result\n}\n")),(0,i.kt)("h4",{id:"applyobservers\u4e4brecompositionrunne"},"applyObservers\u4e4brecompositionRunne"),(0,i.kt)("img",{src:r}),(0,i.kt)("p",null,"\u636e\u6211\u8c03\u67e5\u6b64\u65f6 ",(0,i.kt)("inlineCode",{parentName:"p"},"applyObservers")," \u4e2d\u5305\u542b\u7684\u89c2\u5bdf\u8005\u4ec5\u6709\u4e24\u4e2a\uff0c\u4e00\u4e2a\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"SnapshotStateObserver.applyObserver")," \u7528\u6765\u66f4\u65b0\u5feb\u7167\u72b6\u6001\u4fe1\u606f\uff0c\u53e6\u4e00\u4e2a\u5c31\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"recompositionRunner")," \u7528\u6765\u5904\u7406 recompose\u6d41\u7a0b \u7684\u3002\u7531\u4e8e\u6211\u4eec\u662f\u5728\u7814\u7a76recompose \u6d41\u7a0b\u7684\u6240\u4ee5\u5c31\u4e0d\u5206\u5f00\u53bb\u8ba8\u8bba\u4e86\u3002\u6211\u4eec\u6765\u770b\u770b\u5904\u7406 recompose \u7684 observer \u90fd\u505a\u4e86\u4ec0\u4e48\uff0c\u9996\u5148\u4ed6\u5c06\u6240\u6709\u6539\u53d8\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"mutableState")," \u6dfb\u52a0\u5230\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"snapshotInvalidations"),"\uff0c\u8fd9\u4e2a\u540e\u7eed\u4f1a\u7528\u5230\u3002\u540e\u9762\u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2aresume\uff0c\u8bf4\u660elambda\u7684\u6700\u540e\u8c03\u7528\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"deriveStateLocked")," \u8fd4\u56de\u4e86\u4e00\u4e2a\u534f\u7a0b Continuation \u5b9e\u4f8b\u3002\u4f7f\u5f97\u6302\u8d77\u70b9\u4f4d\u7f6e\u6062\u590d\u6267\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u8fdb\u5165",(0,i.kt)("inlineCode",{parentName:"p"},"deriveStateLocked ")," \u770b\u770b\u8fd9\u4e2a\u534f\u7a0b Continuation \u5b9e\u4f8b\u5230\u5e95\u662f\u8c01\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.Recomposer\n@OptIn(ExperimentalComposeApi::class)\nprivate suspend fun recompositionRunner(\n    block: suspend CoroutineScope.(parentFrameClock: MonotonicFrameClock) -> Unit\n) {\n    withContext(broadcastFrameClock) {\n        ...\n        // \u8d1f\u8d23\u5904\u7406 recompose \u7684 observer \u5c31\u662f\u4ed6\n        val unregisterApplyObserver = Snapshot.registerApplyObserver { \n            changed, _ ->\n                synchronized(stateLock) {\n                    if (_state.value >= State.Idle) {\n                        snapshotInvalidations += changed\n                        deriveStateLocked()\n                    } else null\n                }?.resume(Unit)\n        }\n        ....\n    }\n}\n")),(0,i.kt)("p",null,"\u901a\u8fc7\u51fd\u6570\u8fd4\u56de\u503c\u53ef\u4ee5\u770b\u5230\u8fd9\u662f\u4e00\u4e2a\u53ef\u53d6\u6d88\u7684Continuation\u5b9e\u4f8b ",(0,i.kt)("inlineCode",{parentName:"p"},"workContinuation"),"\uff0c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.Recomposer\nprivate fun deriveStateLocked(): CancellableContinuation<Unit>? {\n    ....\n    return if (newState == State.PendingWork) {\n        workContinuation.also {\n                workContinuation = null\n            }\n    } else null\n}\n")),(0,i.kt)("p",null,"\u90a3\u8fd9\u4e2aworkContinuation\u662f\u5728\u54ea\u91cc\u8d4b\u503c\u7684\u5462\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u627e\u5230\u4e86\u5176\u552f\u4e00\u88ab\u8d4b\u503c\u7684\u5730\u65b9\u3002\u6b64\u65f6 workContinuation \u5c31\u662f co\uff0c\u6b64\u65f6resume\u4e5f\u5c31\u662f\u6062\u590d\u6267\u884c ",(0,i.kt)("inlineCode",{parentName:"p"},"awaitWorkAvailable")," \u8c03\u7528\u6302\u8d77\u70b9\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.Recomposer\nprivate suspend fun awaitWorkAvailable() {\n    if (!hasSchedulingWork) {\n        suspendCancellableCoroutine<Unit> { co ->\n            synchronized(stateLock) {\n                if (hasSchedulingWork) {\n                    co.resume(Unit)\n                } else {\n                    workContinuation = co\n                }\n            }\n        }\n    }\n}\n")),(0,i.kt)("h4",{id:"runrecomposeandapplychanges-\u4e09\u6b65\u9aa4"},"runRecomposeAndApplyChanges \u4e09\u6b65\u9aa4"),(0,i.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"runRecomposeAndApplyChanges")," \u4e2d\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"awaitWorkAvailable")," \u800c\u4ea7\u751f\u4e86\u6302\u8d77\uff0c\u6240\u4ee5\u6b64\u65f6\u4f1a\u6062\u590d\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"runRecomposeAndApplyChanges")," \uff0c\u8fd9\u91cc\u4e3b\u8981\u6709\u4e09\u6b65\u64cd\u4f5c\u63a5\u4e0b\u6765\u8fdb\u884c\u4ecb\u7ecd"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'// androidx.compose.runtime.Recomposer\nsuspend fun runRecomposeAndApplyChanges() = recompositionRunner { parentFrameClock ->\n    val toRecompose = mutableListOf<ControlledComposition>()\n    val toApply = mutableListOf<ControlledComposition>()\n    while (shouldKeepRecomposing) {\n        awaitWorkAvailable()\n        // \u4ece\u8fd9\u5f00\u59cb\u6062\u590d\u6267\u884c\n        if (\n            synchronized(stateLock) {\n                if (!hasFrameWorkLocked) {\n                    // \u6b65\u9aa41\n                    recordComposerModificationsLocked()\n                    !hasFrameWorkLocked\n                } else false\n            }\n        ) continue\n\n        // \u7b49\u5f85Vsync\u4fe1\u53f7\uff0c\u7c7b\u4f3c\u4e8e\u4f20\u7edfView\u7cfb\u7edf\u4e2dscheduleTraversals?\n        parentFrameClock.withFrameNanos { frameTime ->\n            ...\n            trace("Recomposer:recompose") {\n                synchronized(stateLock) {\n                    recordComposerModificationsLocked()\n                                        // \u6b65\u9aa42\n                    compositionInvalidations.fastForEach { toRecompose += it }\n                    compositionInvalidations.clear()\n                }\n              \n                val modifiedValues = IdentityArraySet<Any>()\n                val alreadyComposed = IdentityArraySet<ControlledComposition>()\n                while (toRecompose.isNotEmpty()) {\n                    try {\n                        toRecompose.fastForEach { composition ->\n                            alreadyComposed.add(composition)\n                            // \u6b65\u9aa43\n                            performRecompose(composition, modifiedValues)?.let {\n                                toApply += it\n                            }\n                        }\n                    } finally {\n                        toRecompose.clear()\n                    }\n                    ....\n                }\n                ....\n            }\n        }\n    }\n}\n')),(0,i.kt)("p",null,"\u5bf9\u4e8e\u8fd9\u4e09\u4e2a\u6b65\u9aa4\uff0c\u6211\u4eec\u5206\u522b\u6765\u770b\u9996\u5148\u662f\u6b65\u9aa41\u8c03\u7528\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"recordComposerModificationsLocked")," \u65b9\u6cd5\uff0c \u8fd8\u8bb0\u5f97 ",(0,i.kt)("inlineCode",{parentName:"p"},"snapshotInvalidations")," \u561b, \u4ed6\u8bb0\u5f55\u7740\u6240\u6709\u66f4\u6539\u7684 mutableState\uff0c\u6b64\u65f6\u56de\u8c03\u6240\u6709\u5df2\u77e5composition\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"recordModificationsOf")," \u65b9\u6cd5\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'// androidx.compose.runtime.Recomposer\nprivate fun recordComposerModificationsLocked() {\n    if (snapshotInvalidations.isNotEmpty()) {\n        snapshotInvalidations.fastForEach { changes ->\n            knownCompositions.fastForEach { composition ->\n                composition.recordModificationsOf(changes)\n            }\n        }\n        snapshotInvalidations.clear()\n        if (deriveStateLocked() != null) {\n            error("called outside of runRecomposeAndApplyChanges")\n        }\n    }\n}\n')),(0,i.kt)("p",null,"\u7ecf\u8fc7\u4e00\u7cfb\u5217\u8c03\u7528\u4f1a\u5c06\u6240\u6709\u4f9d\u8d56\u5f53\u524d mutableState \u7684\u6240\u6709 Composable Scope \u5b58\u5165\u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"compositionInvalidations")," \u8fd9\u4e2a List \u4e2d\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.Recomposer\ninternal override fun invalidate(composition: ControlledComposition) {\n    synchronized(stateLock) {\n        if (composition !in compositionInvalidations) {\n            compositionInvalidations += composition\n            deriveStateLocked()\n        } else null\n    }?.resume(Unit)\n}\n")),(0,i.kt)("p",null,"\u6b65\u9aa42\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u5c06 compositionInvalidations \u7684\u6240\u6709\u5143\u7d20\u8f6c\u79fb\u5230\u4e86 toRecompose\uff0c\u800c\u6b65\u9aa43\u5219\u662f recompose\u7684\u91cd\u4e2d\u4e4b\u91cd\uff0c\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"performRecompose")," \u4f7f\u6240\u6709\u53d7\u5230\u5f71\u54cd\u7684 Composable Scope \u91cd\u65b0\u6267\u884c\u3002"),(0,i.kt)("h4",{id:"performrecompose"},"performRecompose"),(0,i.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u770b\u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"performRecompose")," \u4e2d\u95f4\u63a5\u8c03\u7528\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"composing")," \uff0c\u800c\u5176\u4e2d\u6700\u5173\u952e ",(0,i.kt)("inlineCode",{parentName:"p"},"recompose")," \u4e5f\u5728\u56de\u8c03\u4e2d\u5b8c\u6210\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u518d\u8fdb\u5165 ",(0,i.kt)("inlineCode",{parentName:"p"},"composing")," \u770b\u770b\u4ec0\u4e48\u65f6\u5019\u4f1a\u56de\u8c03\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.Recomposer\nprivate fun performRecompose(\n    composition: ControlledComposition,\n    modifiedValues: IdentityArraySet<Any>?\n): ControlledComposition? {\n    if (composition.isComposing || composition.isDisposed) return null\n    return if (\n        composing(composition, modifiedValues) {\n            if (modifiedValues?.isNotEmpty() == true) {\n                composition.prepareCompose {\n                    modifiedValues.forEach { composition.recordWriteOf(it) }\n                }\n            }\n            composition.recompose() // \u771f\u6b63\u53d1\u751frecompose\u7684\u5730\u65b9\n        }\n    ) composition else null\n}\n")),(0,i.kt)("p",null," ",(0,i.kt)("inlineCode",{parentName:"p"},"composing")," \u5185\u90e8\u9996\u5148\u62cd\u6444\u4e86\u4e00\u6b21\u5feb\u7167\uff0c\u7136\u540e\u5c06\u6211\u4eec\u7684recompose\u8fc7\u7a0b\u5728\u8fd9\u6b21\u5feb\u7167\u4e2d\u6267\u884c\uff0c\u6700\u540e\u8fdb\u884c\u4e86apply\u3002\u53c8\u5173\u4e8e\u5feb\u7167\u7cfb\u7edf\u7684\u8bb2\u89e3\u8be6\u89c1 ",(0,i.kt)("a",{parentName:"p",href:"https://juejin.cn/post/6972692477505437733"},"\u300aJetpack Compose \xb7 \u5feb\u7167\u7cfb\u7edf\u300b"),"\u3002 "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.Recomposer\nprivate inline fun <T> composing(\n  composition: ControlledComposition,\n  modifiedValues: IdentityArraySet<Any>?,\n  block: () -> T\n): T {\n  val snapshot = Snapshot.takeMutableSnapshot(\n    readObserverOf(composition), writeObserverOf(composition, modifiedValues)\n  )\n  try {\n    return snapshot.enter(block)\n  } finally {\n    applyAndCheck(snapshot)\n  }\n}\n")),(0,i.kt)("h4",{id:"takemutablesnapshot-\u8bfb\u89c2\u5bdf\u8005\u4e0e\u5199\u89c2\u5bdf\u8005"},"takeMutableSnapshot \u8bfb\u89c2\u5bdf\u8005\u4e0e\u5199\u89c2\u5bdf\u8005"),(0,i.kt)("img",{src:l}),(0,i.kt)("p",null,"\u503c\u5f97\u6ce8\u610f\u7684\u662f\u6b64\u65f6\u8c03\u7528\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"takeMutableSnapshot")," \u65b9\u6cd5\u540c\u65f6\u4f20\u5165\u4e86\u4e00\u4e2a\u8bfb\u89c2\u5bdf\u8005\u548c\u5199\u89c2\u5bdf\u8005\uff0c\u800c\u8fd9\u4e24\u4e2a\u89c2\u5bdf\u8005\u5728\u4ec0\u4e48\u65f6\u673a\u56de\u8c03\u5462\uff1f\u5f53\u6211\u4eec\u6bcf\u6b21 recompose \u65f6\u90fd\u4f1a\u62cd\u6444\u4e00\u6b21\u5feb\u7167\uff0c\u7136\u540e\u6211\u4eec\u7684\u91cd\u65b0\u6267\u884c\u8fc7\u7a0b\u5728\u8fd9\u6b21\u5feb\u7167\u4e2d\u6267\u884c\uff0c\u5728\u91cd\u65b0\u6267\u884c\u8fc7\u7a0b\u4e2d\u5982\u679c\u51fa\u73b0\u4e86 mutableState \u7684\u8bfb\u53d6\u6216\u5199\u5165\u64cd\u4f5c\u90fd\u4f1a\u76f8\u5e94\u7684\u56de\u8c03\u8fd9\u91cc\u7684\u8bfb\u89c2\u5bdf\u8005\u548c\u5199\u89c2\u5bdf\u8005\u3002\u4e5f\u5c31\u8bf4\u660e\u6bcf\u6b21recompose\u90fd\u4f1a\u8fdb\u884c\u91cd\u65b0\u4e00\u6b21\u7ed1\u5b9a\u3002 \u8bfb\u89c2\u5bdf\u8005\u56de\u8c03\u65f6\u673a\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u5199\u89c2\u5bdf\u8005\u5728\u4ec0\u4e48\u65f6\u673a\u56de\u8c03\u5462\uff1f \u8fd8\u8bb0\u5f97\u6211\u4eec\u521a\u5f00\u59cb\u8bf4\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"GlobalSnapshot")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"MutableSnapshot")," \u561b\uff1f"),(0,i.kt)("p",null,"\u5230\u8fd9\u91cc\u6211\u4eec\u4e00\u76f4\u90fd\u5728\u5206\u6790 ",(0,i.kt)("inlineCode",{parentName:"p"},"GlobalSnapshot")," \u8fd9\u6761\u6267\u884c\u8fc7\u7a0b\uff0c\u901a\u8fc7\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"takeMutableSnapshot")," \u5c06\u8fd4\u56de\u4e00\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"MutableSnapshot")," \u5b9e\u4f8b\uff0c\u6211\u4eec\u7684recompose\u91cd\u65b0\u6267\u884c\u8fc7\u7a0b\u53d1\u751f\u5728\u5f53\u524d",(0,i.kt)("inlineCode",{parentName:"p"},"MutableSnapshot")," \u5b9e\u4f8b\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"enter")," \u65b9\u6cd5\u4e2d\uff0c\u6b64\u65f6\u91cd\u65b0\u6267\u884c\u8fc7\u7a0b\u4e2d\u901a\u8fc7\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"Snapshot.current  "),"\u5c06\u8fd4\u56de\u5f53\u524d",(0,i.kt)("inlineCode",{parentName:"p"},"MutableSnapshot")," \u5b9e\u4f8b\uff0c\u6240\u4ee5\u91cd\u65b0\u6267\u884c\u8fc7\u7a0b\u4e2d\u53d1\u751f\u7684\u5199\u64cd\u4f5c\u5c31\u4f1a\u56de\u8c03 ",(0,i.kt)("inlineCode",{parentName:"p"},"takeMutableSnapshot")," \u6240\u4f20\u5165\u7684\u5199\u89c2\u5bdf\u8005\u3002\u4e5f\u5c31\u662f\u4ee5\u4e0b\u8fd9\u79cd\u60c5\u51b5\uff0c\u5f53 Demo \u53d1\u751frecompose\u65f6 display\u6240\u5728 Snapshot \u5c31\u662f\u62cd\u6444\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"MutableSnapshot")," \u5feb\u7167\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'var display by mutableStateOf("Init")\n@Preview\n@Composable\nfun Demo() {\n    Text (\n        text = display,\n        fontSize = 50.sp\n    )\n    display = "change" // recompose\u80fd\u591f\u6267\u884c\u5230\uff0c\u6b64\u65f6\u662f MutableSnapShot\n}\n')),(0,i.kt)("h3",{id:"mutablesnapshot-\u5199\u5165\u901a\u77e5"},"MutableSnapshot \u5199\u5165\u901a\u77e5"),(0,i.kt)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u770b\u770b ",(0,i.kt)("inlineCode",{parentName:"p"},"takeMutableSnapshot")," \u7684\u5199\u89c2\u5bdf\u8005\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002\u6b64\u65f6\u4f1a\u5c06\u66f4\u65b0\u7684\u503c\u4f20\u5165\u5f53\u524drecompose composition \u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"recordWriteOf")," \u65b9\u6cd5\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.Recomposer\nprivate fun writeObserverOf(\n    composition: ControlledComposition,\n    modifiedValues: IdentityArraySet<Any>?\n): (Any) -> Unit {\n    return { value ->\n        composition.recordWriteOf(value)\n        modifiedValues?.add(value)\n    }\n}\n")),(0,i.kt)("p",null,"\u901a\u8fc7\u5bf9\u4e8e\u6d41\u7a0b\u5206\u6790\u53d1\u73b0\uff0c\u5b9e\u9645\u4e0a\u5728recompose\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u72b6\u6001\u5199\u5165\u64cd\u4f5c\u65f6\uff0c\u5e76\u4e0d\u4f1a\u901a\u8fc7\u5199\u89c2\u5bdf\u8005\u7acb\u5373\u8fdb\u884crecompose \u8fc7\u7a0b\uff0c\u800c\u662f\u7b49\u5f85\u5230\u5f53\u524drecompose\u8fc7\u7a0b\u7ed3\u675f\u540e\u8fdb\u884c apply \u65f6\u518d\u8fdb\u884c\u91cd\u65b0 recompose\u3002"),(0,i.kt)("h4",{id:"applyandcheck"},"applyAndCheck"),(0,i.kt)("p",null,"\u8ba9\u6211\u4eec\u56de\u5230Recomposer\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"composing")," \u65b9\u6cd5\uff0c\u6211\u4eec\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"applyAndCheck")," \u5b8c\u6210\u540e\u7eed apply \u64cd\u4f5c\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"applyAndCheck")," \u5185\u90e8\u4f7f\u7528\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"MutableSnapshot.apply")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'// androidx.compose.runtime.Recomposer\nprivate inline fun <T> composing(\n    composition: ControlledComposition,\n    modifiedValues: IdentityArraySet<Any>?,\n    block: () -> T\n): T {\n    val snapshot = Snapshot.takeMutableSnapshot(\n        readObserverOf(composition), writeObserverOf(composition, modifiedValues)\n    )\n    try {\n        return snapshot.enter(block)\n    } finally {\n        applyAndCheck(snapshot) // \u5728\u8fd9\u91cc\n    }\n}\n\nprivate fun applyAndCheck(snapshot: MutableSnapshot) {\n    val applyResult = snapshot.apply()\n    if (applyResult is SnapshotApplyResult.Failure) {\n        error(\n            "Unsupported concurrent change during composition. A state object was " +\n                "modified by composition as well as being modified outside composition."\n        )\n    }\n}\n')),(0,i.kt)("h4",{id:"apply\u4e2d\u4f7f\u7528\u7684applyobservers"},"apply\u4e2d\u4f7f\u7528\u7684applyObservers"),(0,i.kt)("p",null,"\u6211\u4eec\u518d\u8fdb\u5165",(0,i.kt)("inlineCode",{parentName:"p"},"MutableSnapshot.apply")," \u4e00\u63a2\u7a76\u7adf\uff0c\u6b64\u65f6\u5c06\u5f53\u524d modified \u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"snapshot.recordModified(state)")," \u5df2\u7ecf\u66f4\u65b0\u8fc7\u4e86\uff0c\u5fd8\u8bb0\u7684\u8bdd\u53ef\u4ee5\u56de\u5934\u770b\u770b\uff0c\u524d\u9762\u5df2\u7ecf\u8bb2\u8fc7\u4e86\u3002\u6b64\u65f6\u4ecd\u7136\u4f7f\u7528\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"applyObservers")," \u8fdb\u884c\u904d\u5386\u901a\u77e5\u3002\u8fd9\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"applyObservers")," \u5176\u5b9e\u662f\u4e2a\u9759\u6001\u53d8\u91cf\uff0c\u6240\u4ee5\u4e0d\u540c\u7684 GlobalSnapshot \u4e0eMutableSnapshot \u53ef\u4ee5\u5171\u4eab\uff0c\u63a5\u4e0b\u6765\u4ecd\u7136\u901a\u8fc7\u9884\u5148\u8ba2\u9605\u597d\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"recompositionRunner")," \u7528\u6765\u5904\u7406 recompose \u8fc7\u7a0b\uff0c\u8be6\u89c1 ",(0,i.kt)("a",{parentName:"p",href:"#applyobserversrecompositionrunne"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("em",{parentName:"strong"},"applyObservers\u4e4brecompositionRunner"))),"\uff0c\u63a5\u4e0b\u6765\u7684recompose\u6d41\u7a0b\u5c31\u5b8c\u5168\u76f8\u540c\u4e86\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// androidx.compose.runtime.snapshots.Snapshot\nopen fun apply(): SnapshotApplyResult {\n    val modified = modified\n    ....\n    val (observers, globalModified) = sync {\n        validateOpen(this)\n        if (modified == null || modified.size == 0) {\n            ....\n        } else {\n            ....\n            applyObservers.toMutableList() to globalModified\n        }\n    }\n    ....\n    if (modified != null && modified.isNotEmpty()) {\n        observers.fastForEach {\n            it(modified, this)\n        }\n    }\n    return SnapshotApplyResult.Success\n}\n")))}h.isMDXComponent=!0}}]);