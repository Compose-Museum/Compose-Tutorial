"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7213],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=o.createContext({}),s=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=s(e.components);return o.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=s(n),c=a,k=d["".concat(i,".").concat(c)]||d[c]||m[c]||l;return n?o.createElement(k,r(r({ref:t},u),{},{components:n})):o.createElement(k,r({ref:t},u))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:a,r[1]=p;for(var s=2;s<l;s++)r[s]=n[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1222:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var o=n(7462),a=(n(7294),n(3905));const l={id:"slotTable",title:"\u63a2\u7d22 SlotTable \u7cfb\u7edf\u53ca\u539f\u7406"},r="\u5f15\u8a00",p={unversionedId:"principle/slotTable",id:"principle/slotTable",title:"\u63a2\u7d22 SlotTable \u7cfb\u7edf\u53ca\u539f\u7406",description:"Compose \u7684\u7ed8\u5236\u6709\u4e09\u4e2a\u9636\u6bb5\uff0c\u7ec4\u5408 > \u5e03\u5c40  > \u7ed8\u5236\u3002\u540e\u4e24\u4e2a\u8fc7\u7a0b\u4e0e\u4f20\u7edf\u89c6\u56fe\u7684\u6e32\u67d3\u8fc7\u7a0b\u76f8\u8fd1\uff0c\u552f\u72ec\u7ec4\u5408\u662f Compose \u6240\u7279\u6709\u7684\u3002Compose \u901a\u8fc7\u7ec4\u5408\u751f\u6210\u6e32\u67d3\u6811\uff0c\u8fd9\u662f Compose \u6846\u67b6\u7684\u6838\u5fc3\u80fd\u529b\uff0c\u800c\u8fd9\u4e2a\u8fc7\u7a0b\u4e3b\u8981\u662f\u4f9d\u8d56 SlotTable \u5b9e\u73b0\u7684\uff0c\u672c\u6587\u5c31\u6765\u4ecb\u7ecd\u4e00\u4e0b SlotTable \u7cfb\u7edf\u3002",source:"@site/docs/principle/slotTable.mdx",sourceDirName:"principle",slug:"/principle/slotTable",permalink:"/docs/principle/slotTable",draft:!1,editUrl:"https://github.com/compose-museum/jetpack-compose-book/tree/master/docs/principle/slotTable.mdx",tags:[],version:"current",frontMatter:{id:"slotTable",title:"\u63a2\u7d22 SlotTable \u7cfb\u7edf\u53ca\u539f\u7406"},sidebar:"docs",previous:{title:"Compose \u8fd0\u884c\u539f\u7406\u4e0e GapBuffer",permalink:"/docs/principle/gapBuffer"},next:{title:"\u56fe\u89e3 Modifier",permalink:"/docs/principle/modifierStructure"}},i={},s=[{value:"Group \u7684\u4f5c\u7528",id:"group-\u7684\u4f5c\u7528",level:2},{value:"Group \u7684\u7c7b\u578b",id:"group-\u7684\u7c7b\u578b",level:2},{value:"startReplaceableGroup",id:"startreplaceablegroup",level:2},{value:"startMovableGroup",id:"startmovablegroup",level:2},{value:"startRestartGroup",id:"startrestartgroup",level:2},{value:"SlotTable \u7684 Diff",id:"slottable-\u7684-diff",level:2},{value:"SlotReader &amp; SlotWriter",id:"slotreader--slotwriter",level:2},{value:"\u8bb0\u5f55 Change",id:"\u8bb0\u5f55-change",level:2},{value:"\u5e94\u7528 Change",id:"\u5e94\u7528-change",level:2},{value:"Root Node\u7684\u521b\u5efa",id:"root-node\u7684\u521b\u5efa",level:2},{value:"\u91cd\u7ec4\u662f\u4e50\u89c2\u7684",id:"\u91cd\u7ec4\u662f\u4e50\u89c2\u7684",level:2}],u={toc:s};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u5f15\u8a00"},"\u5f15\u8a00"),(0,a.kt)("p",null,"Compose \u7684\u7ed8\u5236\u6709\u4e09\u4e2a\u9636\u6bb5\uff0c\u7ec4\u5408 > \u5e03\u5c40  > \u7ed8\u5236\u3002\u540e\u4e24\u4e2a\u8fc7\u7a0b\u4e0e\u4f20\u7edf\u89c6\u56fe\u7684\u6e32\u67d3\u8fc7\u7a0b\u76f8\u8fd1\uff0c\u552f\u72ec\u7ec4\u5408\u662f Compose \u6240\u7279\u6709\u7684\u3002Compose \u901a\u8fc7\u7ec4\u5408\u751f\u6210\u6e32\u67d3\u6811\uff0c\u8fd9\u662f Compose \u6846\u67b6\u7684\u6838\u5fc3\u80fd\u529b\uff0c\u800c\u8fd9\u4e2a\u8fc7\u7a0b\u4e3b\u8981\u662f\u4f9d\u8d56 SlotTable \u5b9e\u73b0\u7684\uff0c\u672c\u6587\u5c31\u6765\u4ecb\u7ecd\u4e00\u4e0b SlotTable \u7cfb\u7edf\u3002"),(0,a.kt)("h1",{id:"1-\u4ece-compose-\u6e32\u67d3\u8fc7\u7a0b\u8bf4\u8d77"},"1. \u4ece Compose \u6e32\u67d3\u8fc7\u7a0b\u8bf4\u8d77"),(0,a.kt)("p",null,"\u57fa\u4e8e Android \u539f\u751f\u89c6\u56fe\u7684\u5f00\u53d1\u8fc7\u7a0b\uff0c\u5176\u672c\u8d28\u5c31\u662f\u6784\u5efa\u4e00\u68f5\u57fa\u4e8e View \u7684\u6e32\u67d3\u6811\uff0c\u5f53\u5e27\u4fe1\u53f7\u5230\u8fbe\u65f6\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u6df1\u5ea6\u904d\u5386\uff0c\u4f9d\u6b21\u8c03\u7528 measure/layout/draw\uff0c\u76f4\u81f3\u5b8c\u6210\u6574\u68f5\u6811\u7684\u6e32\u67d3\u3002\u5bf9\u4e8e Compose \u6765\u8bf4\u4e5f\u5b58\u5728\u8fd9\u6837\u4e00\u68f5\u6e32\u67d3\u6811\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e3a ",(0,a.kt)("strong",{parentName:"p"},"Compositiion"),"\uff0c\u6811\u4e0a\u7684\u8282\u70b9\u662f ",(0,a.kt)("strong",{parentName:"p"},"LayoutNode"),"\uff0cComposition \u901a\u8fc7 LayoutNode \u5b8c\u6210 measure/layout/draw \u7684\u8fc7\u7a0b\u6700\u7ec8\u5c06 UI \u663e\u793a\u5230\u5c4f\u5e55\u4e0a\u3002Composition \u4f9d\u9760 Composable \u51fd\u6570\u7684\u6267\u884c\u6765\u521b\u5efa\u4ee5\u53ca\u66f4\u65b0\uff0c\u5373\u6240\u8c13\u7684\u7ec4\u5408\u548c\u91cd\u7ec4\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/ad8b5c6a57b9982f9bbb072465713a6b.png",alt:null})),(0,a.kt)("p",null,"\u4f8b\u5982\u4e0a\u9762\u7684 Composable \u4ee3\u7801\uff0c\u7ecf\u8fc7\u6267\u884c\u540e\u4f1a\u751f\u6210\u53f3\u4fa7\u7684 Composition\u3002"),(0,a.kt)("p",null,"\u4e00\u4e2a\u51fd\u6570\u7ecf\u8fc7\u6267\u884c\u662f\u5982\u4f55\u8f6c\u6362\u6210 LayoutNode \u7684\u5462\uff1f\u6df1\u5165 Text \u7684\u6e90\u7801\u540e\u53d1\u73b0\u5176\u5185\u90e8\u8c03\u7528\u4e86 Layout\uff0c Layout \u662f\u4e00\u4e2a\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5e03\u5c40\u7684 Composable\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u7684\u5404\u7c7b Composable \u6700\u7ec8\u90fd\u662f\u901a\u8fc7\u8c03\u7528 Layout \u6765\u5b9e\u73b0\u4e0d\u540c\u7684\u5e03\u5c40\u548c\u663e\u793a\u6548\u679c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"//Layout.kt\n@Composable inline fun Layout(\n    content: @Composable () -> Unit,\n    modifier: Modifier = Modifier,\n    measurePolicy: MeasurePolicy\n) {\n    val density = LocalDensity.current\n    val layoutDirection = LocalLayoutDirection.current\n    val viewConfiguration = LocalViewConfiguration.current\n    ReusableComposeNode<ComposeUiNode, Applier<Any>>(\n        factory = ComposeUiNode.Constructor, \n        update = {\n            set(measurePolicy, ComposeUiNode.SetMeasurePolicy)\n            set(density, ComposeUiNode.SetDensity)\n            set(layoutDirection, ComposeUiNode.SetLayoutDirection)\n            set(viewConfiguration, ComposeUiNode.SetViewConfiguration)\n        },\n        skippableUpdate = materializerOf(modifier),\n        content = content\n    )\n}\n")),(0,a.kt)("p",null,"Layout \u5185\u90e8\u901a\u8fc7 ReusableComposeNode \u521b\u5efa LayoutNode\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"factory")," \u5c31\u662f\u521b\u5efa LayoutNode \u7684\u5de5\u5382"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"update")," \u7528\u6765\u8bb0\u5f55\u4f1a\u66f4\u65b0 Node \u7684\u72b6\u6001\u7528\u4e8e\u540e\u7eed\u6e32\u67d3")),(0,a.kt)("p",null,"\u7ee7\u7eed\u8fdb\u5165 ReusableComposeNode \uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"//Composables.kt\ninline fun <T, reified E : Applier<*>> ReusableComposeNode(\n    noinline factory: () -> T,\n    update: @DisallowComposableCalls Updater<T>.() -> Unit,\n    noinline skippableUpdate: @Composable SkippableUpdater<T>.() -> Unit,\n    content: @Composable () -> Unit\n) {\n    //... \n    $composer.startReusableNode()\n    //...\n    $composer.createNode(factory)\n    //...\n    Updater<T>(currentComposer).update()\n    //...\n    $composer.startReplaceableGroup(0x7ab4aae9)\n    content()\n    $composer.endReplaceableGroup()\n    $composer.endNode()\n}\n")),(0,a.kt)("p",null,"\u6211\u4eec\u77e5\u9053 Composable \u51fd\u6570\u7ecf\u8fc7\u7f16\u8bd1\u540e\u4f1a\u4f20\u5165 Composer\uff0c \u4ee3\u7801\u4e2d\u57fa\u4e8e\u4f20\u5165\u7684 Composer \u5b8c\u6210\u4e86\u4e00\u7cfb\u5217\u64cd\u4f5c\uff0c\u4e3b\u903b\u8f91\u5f88\u6e05\u6670\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Composer#createNode")," \u521b\u5efa\u8282\u70b9"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Updater#update")," \u66f4\u65b0 Node \u72b6\u6001"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"content()")," \u7ee7\u7eed\u6267\u884c\u5185\u90e8 Composable\uff0c\u521b\u5efa\u5b50\u8282\u70b9\u3002")),(0,a.kt)("p",null,"\u6b64\u5916\uff0c\u4ee3\u7801\u4e2d\u8fd8\u7a7f\u63d2\u7740\u4e86\u4e00\u4e9b startXXX/endXXX \uff0c\u8fd9\u6837\u7684\u6210\u5bf9\u8c03\u7528\u5c31\u597d\u4f3c\u5bf9\u4e00\u68f5\u6811\u8fdb\u884c\u6df1\u5ea6\u904d\u5386\u65f6\u7684\u538b\u6808/\u51fa\u6808"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"startReusableNode\n    NodeData // Node\u6570\u636e\n    startReplaceableGroup\n        GroupData //Group\u6570\u636e\n        ... // \u5b50Group\n    endGroup\nendNode\n")),(0,a.kt)("p",null,"\u4e0d\u53ea\u662f ReusableComposeNode \u8fd9\u6837\u7684\u5185\u7f6e Composable\uff0c\u6211\u4eec\u81ea\u5df1\u5199\u7684 Composable \u51fd\u6570\u4f53\u7ecf\u8fc7\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u4e5f\u4f1a\u63d2\u5165\u5927\u91cf\u7684 startXXX/endXXX\uff0c\u8fd9\u4e9b\u5176\u5b9e\u90fd\u662f Composer \u5bf9 SlotTable \u8bbf\u95ee\u7684\u8fc7\u7a0b\uff0cComposer \u7684\u804c\u80fd\u5c31\u662f\u901a\u8fc7\u5bf9 SlotTable \u7684\u8bfb\u5199\u6765\u521b\u5efa\u548c\u66f4\u65b0 Composition\u3002"),(0,a.kt)("p",null,"\u4e0b\u56fe\u662f Composition\uff0cComposer \u4e0e SlotTable \u7684\u5173\u7cfb\u7c7b\u56fe"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/db88b7dd3b13ecc04afe31007c78db97.png",alt:null})),(0,a.kt)("h1",{id:"2-\u521d\u8bc6-slottable"},"2. \u521d\u8bc6 SlotTable"),(0,a.kt)("p",null,"\u524d\u6587\u6211\u4eec\u5c06 Composable \u6267\u884c\u540e\u751f\u6210\u7684\u6e32\u67d3\u6811\u79f0\u4e3a Compositioin\u3002\u5176\u5b9e\u66f4\u51c6\u786e\u6765\u8bf4\uff0cComposition \u4e2d\u5b58\u5728\u4e24\u68f5\u6811\uff0c\u4e00\u68f5\u662f LayoutNode \u6811\uff0c\u8fd9\u662f\u771f\u6b63\u6267\u884c\u6e32\u67d3\u7684\u6811\uff0cLayoutNode \u53ef\u4ee5\u50cf View \u4e00\u6837\u5b8c\u6210 measure/layout/draw \u7b49\u5177\u4f53\u6e32\u67d3\u8fc7\u7a0b\uff1b\u800c\u53e6\u4e00\u68f5\u6811\u662f SlotTable\uff0c\u5b83\u8bb0\u5f55\u4e86 Composition \u4e2d\u7684\u5404\u79cd\u6570\u636e\u72b6\u6001\u3002 \u4f20\u7edf\u89c6\u56fe\u7684\u72b6\u6001\u8bb0\u5f55\u5728 View \u5bf9\u8c61\u4e2d\uff0c\u5728 Compose \u9762\u5411\u51fd\u6570\u7f16\u7a0b\u800c\u4e0d\u9762\u5411\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u4e9b\u72b6\u6001\u9700\u8981\u4f9d\u9760 SlotTable \u8fdb\u884c\u7ba1\u7406\u548c\u7ef4\u62a4\u3002"),(0,a.kt)("p",null,"Composable \u51fd\u6570\u6267\u884c\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u6240\u6709\u6570\u636e\u90fd\u4f1a\u5b58\u5165 SlotTable\uff0c \u5305\u62ec State\u3001CompositionLocal\uff0cremember \u7684 key \u4e0e value \u7b49\u7b49 \uff0c\u8fd9\u4e9b\u6570\u636e\u4e0d\u968f\u51fd\u6570\u7684\u51fa\u6808\u800c\u6d88\u5931\uff0c\u53ef\u4ee5\u8de8\u8d8a\u91cd\u7ec4\u5b58\u5728\u3002Composable \u51fd\u6570\u5728\u91cd\u7ec4\u4e2d\u5982\u679c\u4ea7\u751f\u4e86\u65b0\u6570\u636e\u5219\u4f1a\u66f4\u65b0 SlotTable\u3002"),(0,a.kt)("p",null,"SlotTable \u7684\u6570\u636e\u5b58\u50a8\u5728 Slot \u4e2d\uff0c\u4e00\u4e2a\u6216\u591a\u4e2a Slot \u53c8\u5f52\u5c5e\u4e8e\u4e00\u4e2a Group\u3002\u53ef\u4ee5\u5c06 Group \u7406\u89e3\u4e3a\u6811\u4e0a\u7684\u4e00\u4e2a\u4e2a\u8282\u70b9\u3002\u8bf4 SlotTable \u662f\u4e00\u68f5\u6811\uff0c\u5176\u5b9e\u5b83\u5e76\u975e\u771f\u6b63\u7684\u6811\u5f62\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u7528\u7ebf\u6027\u6570\u7ec4\u6765\u8868\u8fbe\u4e00\u68f5\u6811\u7684\u8bed\u4e49\uff0c\u4ece SlotT\nable \u7684\u5b9a\u4e49\u4e2d\u53ef\u4ee5\u770b\u5230\u8fd9\u4e00\u70b9\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"//SlotTable.kt\ninternal class SlotTable : CompositionData, Iterable<CompositionGroup> {\n\n    /**\n     * An array to store group information that is stored as groups of [Group_Fields_Size]\n     * elements of the array. The [groups] array can be thought of as an array of an inline\n     * struct.\n     */\n    var groups = IntArray(0)\n        private set\n \n    /**\n     * An array that stores the slots for a group. The slot elements for a group start at the\n     * offset returned by [dataAnchor] of [groups] and continue to the next group's slots or to\n     * [slotsSize] for the last group. When in a writer the [dataAnchor] is an anchor instead of\n     * an index as [slots] might contain a gap.\n     */\n    var slots = Array<Any?>(0) { null }\n        private set\n")),(0,a.kt)("p",null,"SlotTable \u6709\u4e24\u4e2a\u6570\u7ec4\u6210\u5458\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"groups")," \u6570\u7ec4\u5b58\u50a8 Group \u4fe1\u606f\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"slots")," \u5b58\u50a8 Group \u6240\u8f96\u7684\u6570\u636e\u3002\u7528\u6570\u7ec4\u66ff\u4ee3\u7ed3\u6784\u5316\u5b58\u50a8\u7684\u597d\u5904\u662f\u53ef\u4ee5\u63d0\u5347\u5bf9\u201c\u6811\u201d\u7684\u8bbf\u95ee\u901f\u5ea6\u3002 Compose \u4e2d\u91cd\u7ec4\u7684\u9891\u7387\u5f88\u9ad8\uff0c\u91cd\u7ec4\u8fc7\u7a0b\u4e2d\u4f1a\u4e0d\u65ad\u7684\u5bf9 SlotTable \u8fdb\u884c\u8bfb\u5199\uff0c\u800c\u8bbf\u95ee\u6570\u7ec4\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ea\u6709 O(1)\uff0c\u6240\u4ee5\u4f7f\u7528\u7ebf\u6027\u6570\u7ec4\u7ed3\u6784\u6709\u52a9\u4e8e\u63d0\u5347\u91cd\u7ec4\u7684\u6027\u80fd\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/36d64222c23b90838d937a9898f22227.png",alt:null})),(0,a.kt)("p",null,"groups \u662f\u4e00\u4e2a IntArray\uff0c\u6bcf 5 \u4e2a Int \u4e3a\u4e00\u7ec4\u6784\u6210\u4e00\u4e2a Group \u7684\u4fe1\u606f"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"key")," :  Group \u5728 SlotTable \u4e2d\u7684\u6807\u8bc6\uff0c\u5728 Parent Group \u8303\u56f4\u5185\u552f\u4e00"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Group info"),": Int \u7684 Bit \u4f4d\u4e2d\u5b58\u50a8\u7740\u4e00\u4e9b Group \u4fe1\u606f\uff0c\u4f8b\u5982\u662f\u5426\u662f\u4e00\u4e2a Node\uff0c\u662f\u5426\u5305\u542b Data \u7b49\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u4ee5\u901a\u8fc7\u4f4d\u63a9\u7801\u6765\u83b7\u53d6\u3002 "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Parent anchor"),": Parent \u5728 groups \u4e2d\u7684\u4f4d\u7f6e\uff0c\u5373\u76f8\u5bf9\u4e8e\u6570\u7ec4\u6307\u9488\u7684\u504f\u79fb"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Size: Group"),": \u5305\u542b\u7684 Slot \u7684\u6570\u91cf"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Data anchor"),"\uff1a\u5173\u8054 Slot \u5728 slots \u6570\u7ec4\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e")),(0,a.kt)("p",null,"slots \u662f\u771f\u6b63\u5b58\u50a8\u6570\u636e\u7684\u5730\u65b9\uff0cComposable \u6267\u884c\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u4ea7\u751f\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\uff0c\u6240\u4ee5\u6570\u7ec4\u7c7b\u578b\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"Any?"),"\u3002\u6bcf\u4e2a Gorup \u5173\u8054\u7684 Slot \u6570\u91cf\u4e0d\u5b9a\uff0cSlot \u5728 slots \u4e2d\u6309\u7167\u6240\u5c5e Group \u7684\u987a\u5e8f\u4f9d\u6b21\u5b58\u653e\u3002"),(0,a.kt)("p",null,"groups \u548c slots \u4e0d\u662f\u94fe\u8868\uff0c\u6240\u4ee5\u5f53\u5bb9\u91cf\u4e0d\u8db3\u65f6\uff0c\u5b83\u4eec\u4f1a\u8fdb\u884c\u6269\u5bb9\u3002"),(0,a.kt)("h1",{id:"3-\u6df1\u5165\u7406\u89e3-group"},"3. \u6df1\u5165\u7406\u89e3 Group"),(0,a.kt)("h2",{id:"group-\u7684\u4f5c\u7528"},"Group \u7684\u4f5c\u7528"),(0,a.kt)("p",null,"SlotTable \u7684\u6570\u636e\u5b58\u50a8\u5728 Slot \u4e2d\uff0c\u4e3a\u4ec0\u4e48\u5145\u5f53\u6811\u4e0a\u8282\u70b9\u7684\u5355\u4f4d\u4e0d\u662f Slot \u800c\u662f Group \u5462\uff1f\u56e0\u4e3a Group \u63d0\u4f9b\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u4f5c\u7528\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"\u6784\u5efa\u6811\u5f62\u7ed3\u6784"),": Composable \u9996\u6b21\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5728 startXXXGroup \u4e2d\u4f1a\u521b\u5efa Group \u8282\u70b9\u5b58\u5165 SlotTable\uff0c\u540c\u65f6\u901a\u8fc7\u8bbe\u7f6e Parent anchor \u6784\u5efa Group \u7684\u7236\u5b50\u5173\u7cfb\uff0cGroup \u7684\u7236\u5b50\u5173\u7cfb\u662f\u6784\u5efa\u6e32\u67d3\u6811\u7684\u57fa\u7840\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"\u8bc6\u522b\u7ed3\u6784\u53d8\u5316"),": \u7f16\u8bd1\u671f\u63d2\u5165 startXXXGroup \u4ee3\u7801\u65f6\u4f1a\u57fa\u4e8e\u4ee3\u7801\u4f4d\u7f6e\u751f\u6210\u53ef\u8bc6\u522b\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"$key"),"\uff08parent \u8303\u56f4\u5185\u552f\u4e00\uff09\u3002\u5728\u9996\u6b21\u7ec4\u5408\u65f6 ",(0,a.kt)("inlineCode",{parentName:"p"},"$key")," \u4f1a\u968f\u7740 Group \u5b58\u5165 SlotTable\uff0c\u5728\u91cd\u7ec4\u4e2d\uff0cComposer \u57fa\u4e8e ",(0,a.kt)("inlineCode",{parentName:"p"},"$key")," \u7684\u6bd4\u8f83\u53ef\u4ee5\u8bc6\u522b\u51fa Group \u7684\u589e\u3001\u5220\u6216\u8005\u4f4d\u7f6e\u79fb\u52a8\u3002\u6362\u8a00\u4e4b\uff0cSlotTable \u4e2d\u8bb0\u5f55\u7684 Group \u643a\u5e26\u4e86\u4f4d\u7f6e\u4fe1\u606f\uff0c\u6545\u8fd9\u79cd\u673a\u5236\u4e5f\u88ab\u79f0\u4e3a  ",(0,a.kt)("strong",{parentName:"p"},"Positional Memoization"),"\u3002Positional Memoization \u53ef\u4ee5\u53d1\u73b0 SlotTable \u7ed3\u6784\u4e0a\u7684\u53d8\u5316\uff0c\u6700\u7ec8\u8f6c\u5316\u4e3a LayoutNode \u6811\u7684\u66f4\u65b0\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"\u91cd\u7ec4\u7684\u6700\u5c0f\u5355\u4f4d"),": Compose \u7684\u91cd\u7ec4\u662f\u201c\u667a\u80fd\u201d\u7684\uff0cComposable \u51fd\u6570\u6216\u8005 Lambda \u5728\u91cd\u7ec4\u4e2d\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u5fc5\u8981\u7684\u6267\u884c\u3002\u5728 SlotTtable \u4e0a\uff0c\u8fd9\u4e9b\u51fd\u6570\u6216 lambda \u4f1a\u88ab\u5305\u88c5\u4e3a\u4e00\u4e2a\u4e2a RestartGroup \uff0c\u56e0\u6b64 Group \u662f\u53c2\u4e0e\u91cd\u7ec4\u7684\u6700\u5c0f\u5355\u4f4d\u3002"))),(0,a.kt)("h2",{id:"group-\u7684\u7c7b\u578b"},"Group \u7684\u7c7b\u578b"),(0,a.kt)("p",null,"Composable \u5728\u7f16\u8bd1\u671f\u4f1a\u751f\u6210\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684 startXXXGroup\uff0c\u5b83\u4eec\u5728 SlotTable \u4e2d\u63d2\u5165 Group \u7684\u540c\u65f6\uff0c\u4f1a\u5b58\u5165\u8f85\u52a9\u4fe1\u606f\u4ee5\u5b9e\u73b0\u4e0d\u540c\u7684\u529f\u80fd\uff1a\n|startXXXGroup| \u8bf4\u660e|\n|:--|:--|\n|startNode/startReusableNode|\u63d2\u5165\u4e00\u4e2a\u5305\u542b Node \u7684 Group\u3002\u4f8b\u5982\u6587\u7ae0\u5f00\u5934 ReusableComposeNode \u7684\u4f8b\u5b50\u4e2d\uff0c\u663e\u793a\u8c03\u7528\u4e86 startReusableNode \uff0c\u800c\u540e\u8c03\u7528 createNode \u5728 Slot \u4e2d\u63d2\u5165 LayoutNode\u3002 |\n|startRestartGroup|\u63d2\u5165\u4e00\u4e2a\u53ef\u91cd\u590d\u6267\u884c\u7684 Group\uff0c\u5b83\u53ef\u80fd\u4f1a\u968f\u7740\u91cd\u7ec4\u88ab\u518d\u6b21\u6267\u884c\uff0c\u56e0\u6b64 RestartGroup \u662f\u91cd\u7ec4\u7684\u6700\u5c0f\u5355\u5143\u3002|\n|startReplaceableGroup|\u63d2\u5165\u4e00\u4e2a\u53ef\u4ee5\u88ab\u66ff\u6362\u7684 Group\uff0c\u4f8b\u5982\u4e00\u4e2a if/else \u4ee3\u7801\u5757\u5c31\u662f\u4e00\u4e2a  ReplaceableGroup\uff0c\u5b83\u53ef\u4ee5\u5728\u91cd\u7ec4\u4e2d\u88ab\u63d2\u5165\u540e\u8005\u4ece SlotTable \u4e2d\u79fb\u9664\u3002|\n|startMovableGroup|\u63d2\u5165\u4e00\u4e2a\u53ef\u4ee5\u79fb\u52a8\u7684 Group\uff0c\u5728\u91cd\u7ec4\u4e2d\u53ef\u80fd\u5728\u5144\u5f1f Group \u4e4b\u95f4\u53d1\u751f\u4f4d\u7f6e\u79fb\u52a8\u3002 |\n|startReusableGroup|\u63d2\u5165\u4e00\u4e2a\u53ef\u590d\u7528\u7684 Group\uff0c\u5176\u5185\u90e8\u6570\u636e\u53ef\u5728 LayoutNode \u4e4b\u95f4\u590d\u7528\uff0c\u4f8b\u5982 LazyList \u4e2d\u540c\u7c7b\u578b\u7684 Item\u3002|"),(0,a.kt)("p",null,"\u5f53\u7136 startXXXGroup \u4e0d\u6b62\u7528\u4e8e\u63d2\u5165\u65b0 Group\uff0c\u5728\u91cd\u7ec4\u4e2d\u4e5f\u4f1a\u7528\u6765\u8ffd\u8e2a SlotTable \u7684\u5df2\u6709 Group\uff0c\u4e0e\u5f53\u524d\u6267\u884c\n\u4e2d\u7684\u4ee3\u7801\u60c5\u51b5\u8fdb\u884c\u6bd4\u8f83\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u4e0b\u51e0\u79cd\u4e0d\u540c\u7c7b\u578b\u7684 startXXXGroup \u51fa\u73b0\u5728\u4ec0\u4e48\u6837\u7684\u4ee3\u7801\u4e2d\u3002"),(0,a.kt)("h1",{id:"4-\u7f16\u8bd1\u671f\u751f\u6210\u7684-startxxxgroup"},"4. \u7f16\u8bd1\u671f\u751f\u6210\u7684 startXXXGroup"),(0,a.kt)("p",null,"\u524d\u9762\u4ecb\u7ecd\u4e86 startXXXGroup \u7684\u51e0\u79cd\u7c7b\u578b\uff0c\u6211\u4eec\u5e73\u65e5\u5728\u5199 Compose \u4ee3\u7801\u65f6\uff0c\u5bf9\u4ed6\u4eec\u6beb\u65e0\u611f\u77e5\uff0c\u90a3\u4e48\u4ed6\u4eec\u5206\u522b\u662f\u5728\u4f55\u79cd\u60c5\u51b5\u4e0b\u751f\u6210\u7684\u5462\uff1f\u4e0b\u9762\u770b\u51e0\u79cd\u5e38\u89c1\u7684 startXXXGroup \u7684\u751f\u6210\u65f6\u673a\uff1a"),(0,a.kt)("h2",{id:"startreplaceablegroup"},"startReplaceableGroup"),(0,a.kt)("p",null,"\u524d\u9762\u63d0\u5230\u8fc7 Positional Memoization \u7684\u6982\u5ff5\uff0c\u5373 Group \u5b58\u5165 SlotTable \u65f6\uff0c\u4f1a\u643a\u5e26\u57fa\u4e8e\u4f4d\u7f6e\u751f\u6210\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"$key"),"\uff0c\u8fd9\u6709\u52a9\u4e8e\u8bc6\u522b SlotTable \u7684\u7ed3\u6784\u53d8\u5316\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u80fd\u66f4\u6e05\u695a\u5730\u89e3\u91ca\u8fd9\u4e2a\u7279\u6027"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'@Composable\nfun ReplaceableGroupTest(condition: Boolean) {\n    if (condition) {\n        Text("Hello") //Text Node 1\n    } else {\n        Text("World") //Text Node 2\n    }\n}\n')),(0,a.kt)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\uff0c\u5f53 condition \u4ece true \u53d8\u4e3a false\uff0c\u610f\u5473\u7740\u6e32\u67d3\u6811\u5e94\u8be5\u79fb\u9664\u65e7\u7684 Text Node 1 \uff0c\u5e76\u6dfb\u52a0\u65b0\u7684 Text Node 2\u3002\u6e90\u7801\u4e2d\u6211\u4eec\u6ca1\u6709\u4e3a Text \u6dfb\u52a0\u53ef\u8fa8\u8bc6\u7684 key\uff0c\u5982\u679c\u4ec5\u6309\u7167\u6e90\u7801\u6267\u884c\uff0c\u7a0b\u5e8f\u65e0\u6cd5\u8bc6\u522b\u51fa counditioin \u53d8\u5316\u524d\u540e Node \u7684\u4e0d\u540c\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u65e7\u7684\u8282\u70b9\u72b6\u6001\u4f9d\u7136\u6b8b\u7559\uff0cUI \u4e0d\u7b26\u9884\u671f\u3002"),(0,a.kt)("p",null,"Compose \u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff0c\u770b\u4e00\u4e0b\u4e0a\u8ff0\u4ee3\u7801\u7f16\u8bd1\u540e\u7684\u6837\u5b50\uff08\u4f2a\u4ee3\u7801\uff09\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'@Composable\nfun ReplaceableGroupTest(condition: Boolean, $composer: Composer?, $changed: Int) {\n    if (condition) {\n        $composer.startReplaceableGroup(1715939608)\n        Text("Hello")\n        $composer.endReplaceableGroup()\n    } else {\n        $composer.startReplaceableGroup(1715939657)\n        Text("World")\n        $composer.endReplaceableGroup()\n    }\n}\n')),(0,a.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0c\u7f16\u8bd1\u5668\u4e3a if/else \u6bcf\u4e2a\u6761\u4ef6\u5206\u652f\u90fd\u63d2\u5165\u4e86 RestaceableGroup \uff0c\u5e76\u6dfb\u52a0\u4e86\u4e0d\u540c\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"$key"),"\u3002\u8fd9\u6837\u5f53 ",(0,a.kt)("inlineCode",{parentName:"p"},"condition")," \u53d1\u751f\u53d8\u5316\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc6\u522b Group \u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4ece\u800c\u4ece\u7ed3\u6784\u4e0a\u53d8\u66f4 SlotTable\uff0c\u800c\u4e0d\u53ea\u662f\u66f4\u65b0\u539f\u6709 Node\u3002"),(0,a.kt)("p",null,"if/else \u5185\u90e8\u5373\u4f7f\u8c03\u7528\u4e86\u591a\u4e2a Composable\uff08\u6bd4\u5982\u53ef\u80fd\u51fa\u73b0\u591a\u4e2a Text) \uff0c\u5b83\u4eec\u4e5f\u53ea\u4f1a\u5305\u88c5\u5728\u4e00\u4e2a RestartGroup \uff0c\u56e0\u4e3a\u5b83\u4eec\u603b\u662f\u88ab\u4e00\u8d77\u63d2\u5165/\u5220\u9664\uff0c\u65e0\u9700\u5355\u72ec\u751f\u6210 Group \u3002"),(0,a.kt)("h2",{id:"startmovablegroup"},"startMovableGroup"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'@Composable\nfun MoveableGroupTest(list: List<Item>) {\n    Column {\n        list.forEach { \n            Text("Item:$it")\n        }\n    }\n}\n')),(0,a.kt)("p",null,"\u4e0a\u9762\u4ee3\u7801\u662f\u4e00\u4e2a\u663e\u793a\u5217\u8868\u7684\u4f8b\u5b50\u3002\u7531\u4e8e\u5217\u8868\u7684\u6bcf\u4e00\u884c\u5728 for \u5faa\u73af\u4e2d\u751f\u6210\uff0c\u65e0\u6cd5\u57fa\u4e8e\u4ee3\u7801\u4f4d\u7f6e\u5b9e\u73b0 ",(0,a.kt)("strong",{parentName:"p"},"Positional Memoization"),"\uff0c\u5982\u679c\u53c2\u6570 list \u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6bd4\u5982\u63d2\u5165\u4e86\u4e00\u4e2a\u65b0\u7684 Item\uff0c\u6b64\u65f6 Composer \u65e0\u6cd5\u8bc6\u522b\u51fa Group \u7684\u4f4d\u79fb\uff0c\u4f1a\u5bf9\u5176\u8fdb\u884c\u5220\u9664\u548c\u91cd\u5efa\uff0c\u5f71\u54cd\u91cd\u7ec4\u6027\u80fd\u3002"),(0,a.kt)("p",null,"\u9488\u5bf9\u8fd9\u7c7b\u65e0\u6cd5\u4f9d\u9760\u7f16\u8bd1\u5668\u751f\u6210 ",(0,a.kt)("inlineCode",{parentName:"p"},"$key")," \u7684\u95ee\u9898\uff0cCompose \u7ed9\u4e86\u89e3\u51b3\u65b9\u6848\uff0c\u53ef\u4ee5\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"key {...}")," \u624b\u52a8\u6dfb\u52a0\u552f\u4e00\u7d22\u5f15 key\uff0c\u4fbf\u4e8e\u8bc6\u522b Item \u7684\u65b0\u589e\uff0c\u63d0\u5347\u91cd\u7ec4\u6027\u80fd\u3002\u7ecf\u4f18\u5316\u540e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'//Before Compiler\n@Composable\nfun MoveableGroupTest(list: List<Item>) {\n    Column {\n        list.forEach { \n            key(izt.id) { //Unique key\n                Text("Item:$it")\n            }\n            \n        }\n    }\n}\n')),(0,a.kt)("p",null,"\u4e0a\u9762\u4ee3\u7801\u7ecf\u8fc7\u7f16\u8bd1\u540e\u4f1a\u63d2\u5165 startMoveableGroup\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'@Composable\nfun MoveableGroupTest(list: List<Item>, $composer: Composer?, $changed: Int) {\n    Column {\n        list.forEach { \n            key(it.id) {\n                $composer.startMovableGroup(-846332013, Integer.valueOf(it));\n                Text("Item:$it")\n                $composer.endMovableGroup();\n            }\n        }\n    }\n}\n')),(0,a.kt)("p",null,"startMoveableGroup \u7684\u53c2\u6570\u4e2d\u9664\u4e86 GroupKey \u8fd8\u4f20\u5165\u4e86\u4e00\u4e2a\u8f85\u52a9\u7684 DataKey\u3002\u5f53\u8f93\u5165\u7684 list \u6570\u636e\u4e2d\u51fa\u73b0\u4e86\u589e/\u5220\u6216\u8005\u4f4d\u79fb\u65f6\uff0cMoveableGroup \u53ef\u4ee5\u57fa\u4e8e DataKey \u8bc6\u522b\u51fa\u662f\u5426\u662f\u4f4d\u79fb\u800c\u975e\u9500\u6bc1\u91cd\u5efa\uff0c\u63d0\u5347\u91cd\u7ec4\u7684\u6027\u80fd\u3002"),(0,a.kt)("h2",{id:"startrestartgroup"},"startRestartGroup"),(0,a.kt)("p",null,"RestartGroup \u662f\u4e00\u4e2a\u53ef\u91cd\u7ec4\u5355\u5143\uff0c\u6211\u4eec\u5728\u65e5\u5e38\u4ee3\u7801\u4e2d\u5b9a\u4e49\u7684\u6bcf\u4e2a Composable \u51fd\u6570\u90fd\u53ef\u4ee5\u5355\u72ec\u53c2\u4e0e\u91cd\u7ec4\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u51fd\u6570\u4f53\u4e2d\u90fd\u4f1a\u63d2\u5165 startRestartGroup/endRestartGroup\uff0c\u7f16\u8bd1\u524d\u540e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"// Before compiler (sources)\n@Composable\nfun RestartGroupTest(str: String) {\n    Text(str)\n}\n\n// After compiler\n@Composable\nfun RestartGroupTest(str: String, $composer: Composer<*>, $changed: Int) {\n    $composer.startRestartGroup(-846332013)\n    // ...\n    Text(str)\n    $composer.endRestartGroup()?.updateScope { next ->\n        RestartGroupTest(str, next, $changed or 0b1)\n    }\n}\n")),(0,a.kt)("p",null,"\u770b\u4e00\u4e0b startRestartGroup \u505a\u4e86\u4e9b\u4ec0\u4e48"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"//Composer.kt\nfun startRestartGroup(key: Int): Composer {\n    start(key, null, false, null)\n    addRecomposeScope() \n    return this\n}\n\nprivate fun addRecomposeScope() {\n    //...\n    val scope = RecomposeScopeImpl(composition as CompositionImpl)\n    invalidateStack.push(scope) \n    updateValue(scope)\n    //...\n}\n")),(0,a.kt)("p",null,"\u8fd9\u91cc\u4e3b\u8981\u662f\u521b\u5efa ",(0,a.kt)("inlineCode",{parentName:"p"},"RecomposeScopeImpl")," \u5e76\u5b58\u5165 SlotTable \u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"RecomposeScopeImpl \u4e2d\u5305\u88f9\u4e86\u4e00\u4e2a Composable \u51fd\u6570\uff0c\u5f53\u5b83\u9700\u8981\u53c2\u4e0e\u91cd\u7ec4\u65f6\uff0cCompose \u4f1a\u4ece SlotTable \u4e2d\u627e\u5230\u5b83\u5e76\u8c03\u7528 ",(0,a.kt)("inlineCode",{parentName:"li"},"RecomposeScopeImpl#invalide()")," \u6807\u8bb0\u5931\u6548\uff0c\u5f53\u91cd\u7ec4\u6765\u4e34\u65f6 Composable \u51fd\u6570\u88ab\u91cd\u65b0\u6267\u884c\u3002"),(0,a.kt)("li",{parentName:"ul"},"RecomposeScopeImpl \u88ab\u7f13\u5b58\u5230 ",(0,a.kt)("inlineCode",{parentName:"li"},"invalidateStack"),"\uff0c\u5e76\u5728 ",(0,a.kt)("inlineCode",{parentName:"li"},"Composer#endRestartGroup()")," \u4e2d\u8fd4\u56de\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"updateScope")," \u4e3a\u5176\u8bbe\u7f6e\u9700\u8981\u53c2\u4e0e\u91cd\u7ec4\u7684 Composable \u51fd\u6570\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u5f53\u524d\u51fd\u6570\u7684\u9012\u5f52\u8c03\u7528\u3002\u6ce8\u610f endRestartGroup \u7684\u8fd4\u56de\u503c\u662f\u53ef\u7a7a\u7684\uff0c\u5982\u679c RestartGroupTest \u4e2d\u4e0d\u4f9d\u8d56\u4efb\u4f55\u72b6\u6001\u5219\u65e0\u9700\u53c2\u4e0e\u91cd\u7ec4\uff0c\u6b64\u65f6\u5c06\u8fd4\u56de null\u3002")),(0,a.kt)("p",null,"\u53ef\u89c1\uff0c\u65e0\u8bba Composable \u662f\u5426\u6709\u5fc5\u8981\u53c2\u4e0e\u91cd\u7ec4\uff0c\u751f\u6210\u4ee3\u7801\u90fd\u4e00\u6837\u3002\u8fd9\u964d\u4f4e\u4e86\u4ee3\u7801\u751f\u6210\u903b\u8f91\u7684\u590d\u6742\u5ea6\uff0c\u5c06\u5224\u65ad\u7559\u5230\u8fd0\u884c\u65f6\u5904\u7406\u3002"),(0,a.kt)("h1",{id:"5-slottable-\u7684-diff-\u4e0e\u904d\u5386"},"5. SlotTable \u7684 Diff \u4e0e\u904d\u5386"),(0,a.kt)("h2",{id:"slottable-\u7684-diff"},"SlotTable \u7684 Diff"),(0,a.kt)("p",null,"\u58f0\u660e\u5f0f\u6846\u67b6\u4e2d\uff0c\u6e32\u67d3\u6811\u7684\u66f4\u65b0\u90fd\u662f\u901a\u8fc7 Diff \u5b9e\u73b0\u7684\uff0c\u6bd4\u5982 React \u901a\u8fc7 VirtualDom \u7684 Diff \u5b9e\u73b0 Dom \u6811\u7684\u5c40\u90e8\u66f4\u65b0\uff0c\u63d0\u5347 UI \u5237\u65b0\u7684\u6027\u80fd\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/03a6aefc6645e5963fd9c8d936c5690c.png",alt:null})),(0,a.kt)("p",null,"SlotTable \u5c31\u662f Compose \u7684 \u201cVirtual Dom\u201d\uff0cComposable \u521d\u6b21\u6267\u884c\u65f6\u5728 SlotTable \u4e2d\u63d2\u5165 Group \u548c\u5bf9\u5e94\u7684 Slot \u6570\u636e\u3002 \u5f53 Composable \u53c2\u4e0e\u91cd\u7ec4\u65f6\uff0c\u57fa\u4e8e\u4ee3\u7801\u73b0\u72b6\u4e0e SlotTable \u4e2d\u7684\u72b6\u6001\u8fdb\u884c Diff\uff0c\u53d1\u73b0 Composition \u4e2d\u9700\u8981\u66f4\u65b0\u7684\u72b6\u6001\uff0c\u5e76\u6700\u7ec8\u5e94\u7528\u5230 LayoutNode \u6811\u3002"),(0,a.kt)("p",null,"\u8fd9\u4e2a Diff \u7684\u8fc7\u7a0b\u4e5f\u662f\u5728 startXXXGroup \u8fc7\u7a0b\u4e2d\u5b8c\u6210\u7684\uff0c\u5177\u4f53\u5b9e\u73b0\u90fd\u96c6\u4e2d\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"Composer#start()")," \uff1a "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"//Composer.kt\nprivate fun start(key: Int, objectKey: Any?, isNode: Boolean, data: Any?) {\n    //...\n    \n    if (pending == null) {\n        val slotKey = reader.groupKey\n        if (slotKey == key && objectKey == reader.groupObjectKey) {\n            // \u901a\u8fc7 key \u7684\u6bd4\u8f83\uff0c\u786e\u5b9a group \u8282\u70b9\u6ca1\u6709\u53d8\u5316\uff0c\u8fdb\u884c\u6570\u636e\u6bd4\u8f83\n            startReaderGroup(isNode, data)\n        } else {\n            // group \u8282\u70b9\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u521b\u5efa pending \u8fdb\u884c\u540e\u7eed\u5904\u7406\n            pending = Pending(\n                reader.extractKeys(),\n                nodeIndex\n            )\n        }\n    }\n    //...\n    if (pending != null) {\n        // \u5bfb\u627e gorup \u662f\u5426\u5728 Compositon \u4e2d\u5b58\u5728\n        val keyInfo = pending.getNext(key, objectKey)\n        if (keyInfo != null) {\n            // group \u5b58\u5728\uff0c\u4f46\u662f\u4f4d\u7f6e\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u9700\u8981\u501f\u52a9 GapBuffer \u8fdb\u884c\u8282\u70b9\u4f4d\u79fb\n            val location = keyInfo.location\n            reader.reposition(location)\n            if (currentRelativePosition > 0) {\n                // \u5bf9 Group \u8fdb\u884c\u4f4d\u79fb\n                recordSlotEditingOperation { _, slots, _ ->\n                    slots.moveGroup(currentRelativePosition)\n                }\n            }\n            startReaderGroup(isNode, data)\n        } else {\n            //...\n            val startIndex = writer.currentGroup\n            when {\n                isNode -> writer.startNode(Composer.Empty)\n                data != null -> writer.startData(key, objectKey ?: Composer.Empty, data)\n                else -> writer.startGroup(key, objectKey ?: Composer.Empty)\n            }\n        }\n    }\n    \n    //...\n}\n")),(0,a.kt)("p",null,"start \u65b9\u6cd5\u6709\u56db\u4e2a\u53c2\u6570\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"key"),": \u7f16\u8bd1\u671f\u57fa\u4e8e\u4ee3\u7801\u4f4d\u7f6e\u751f\u6210\u7684  ",(0,a.kt)("inlineCode",{parentName:"li"},"$key")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"objectKey"),": \u4f7f\u7528 key{} \u6dfb\u52a0\u7684\u8f85\u52a9 key"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"isNode"),"\uff1a\u5f53\u524d Group \u662f\u5426\u662f\u4e00\u4e2a Node\uff0c\u5728 startXXXNode \u4e2d\uff0c\u6b64\u5904\u4f1a\u4f20\u5165 true"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"data"),"\uff1a\u5f53\u524d Group \u662f\u5426\u6709\u4e00\u4e2a\u6570\u636e\uff0c\u5728 startProviders \u4e2d\u4f1a\u4f20\u5165 providers")),(0,a.kt)("p",null,"start \u65b9\u6cd5\u4e2d\u6709\u5f88\u591a\u5bf9 reader \u548c writer \u7684\u8c03\u7528\uff0c\u7a0d\u540e\u4f1a\u5bf9\u4ed6\u4eec\u4f5c\u4ecb\u7ecd\uff0c\u8fd9\u91cc\u53ea\u9700\u8981\u77e5\u9053\u4ed6\u4eec\u53ef\u4ee5\u8ffd\u8e2a SlotTable \u4e2d\u5f53\u524d\u5e94\u8be5\u8bbf\u95ee\u7684\u4f4d\u7f6e\uff0c\u5e76\u5b8c\u6210\u8bfb/\u5199\u64cd\u4f5c\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u5df2\u7ecf\u7ecf\u8fc7\u63d0\u70bc\uff0c\u903b\u8f91\u6bd4\u8f83\u6e05\u6670\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u57fa\u4e8e key \u6bd4\u8f83 Group \u662f\u5426\u76f8\u540c\uff08SlotTable \u4e2d\u7684\u8bb0\u5f55\u4e0e\u4ee3\u7801\u73b0\u72b6\uff09\uff0c\u5982\u679c Group \u6ca1\u6709\u53d8\u5316\uff0c\u5219\u8c03\u7528 startReaderGroup \u8fdb\u4e00\u6b65\u5224\u65ad Group \u5185\u7684\u6570\u636e\u662f\u5426\u53d1\u751f\u53d8\u5316"),(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c Group \u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5219\u610f\u5473\u7740 start \u4e2d Group \u9700\u8981\u65b0\u589e\u6216\u8005\u4f4d\u79fb\uff0c\u901a\u8fc7 pending.getNext \u67e5\u627e key \u662f\u5426\u5728 Composition \u4e2d\u5b58\u5728\uff0c\u82e5\u5b58\u5728\u5219\u8868\u793a\u9700\u8981 Group \u9700\u8981\u4f4d\u79fb\uff0c\u901a\u8fc7 slot.moveGroup \u8fdb\u884c\u4f4d\u79fb"),(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c Group \u9700\u8981\u65b0\u589e\uff0c\u5219\u6839\u636e Group \u7c7b\u578b\uff0c\u5206\u522b\u8c03\u7528\u4e0d\u540c\u7684 writer#startXXX \u5c06 Group \u63d2\u5165 SlotTable")),(0,a.kt)("p",null,"Group \u5185\u7684\u6570\u636e\u6bd4\u8f83\u662f\u5728 startReaderGroup \u4e2d\u8fdb\u884c\u7684\uff0c\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"private fun startReaderGroup(isNode: Boolean, data: Any?) {\n    //...\n    if (data != null && reader.groupAux !== data) {\n        recordSlotTableOperation { _, slots, _ ->\n            slots.updateAux(data)\n        }\n    }\n    //...    \n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"reader.groupAux")," \u83b7\u53d6\u5f53\u524d Slot \u4e2d\u7684\u6570\u636e\u4e0e data \u505a\u6bd4\u8f83"),(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u4e0d\u540c\uff0c\u5219\u8c03\u7528 ",(0,a.kt)("inlineCode",{parentName:"li"},"recordSlotTableOperation")," \u5bf9\u6570\u636e\u8fdb\u884c\u66f4\u65b0\u3002")),(0,a.kt)("p",null,"\u6ce8\u610f\u5bf9 SlotTble \u7684\u66f4\u65b0\u5e76\u975e\u7acb\u5373\u751f\u6548\uff0c\u8fd9\u5728\u540e\u6587\u4f1a\u4f5c\u4ecb\u7ecd\u3002"),(0,a.kt)("h2",{id:"slotreader--slotwriter"},"SlotReader & SlotWriter"),(0,a.kt)("p",null,"\u4e0a\u9762\u770b\u5230\uff0cstart \u8fc7\u7a0b\u4e2d\u5bf9 SlotTable \u7684\u8bfb\u5199\u90fd\u9700\u8981\u4f9d\u9760 Composition \u7684 reader \u548c writer \u6765\u5b8c\u6210\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/e222476a7ad6c5e3606a2c2027d8eff1.png",alt:null})),(0,a.kt)("p",null,"writer \u548c reader \u90fd\u6709\u5bf9\u5e94\u7684 startGroup/endGroup \u65b9\u6cd5\u3002\u5bf9\u4e8e writer \u6765\u8bf4 startGroup \u4ee3\u8868\u5bf9 SlotTable \u7684\u6570\u636e\u53d8\u66f4\uff0c\u4f8b\u5982\u63d2\u5165\u6216\u5220\u9664\u4e00\u4e2a Group \uff1b\u5bf9\u4e8e reader \u6765\u8bf4 startGroup \u4ee3\u8868\u7740\u79fb\u52a8 currentGroup \u6307\u9488\u5230\u6700\u65b0\u4f4d\u7f6e\u3002",(0,a.kt)("inlineCode",{parentName:"p"},"currentGroup")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"currentSlot")," \u6307\u5411 SlotTable \u5f53\u524d\u8bbf\u95ee\u4e2d\u7684 Group \u548c Slot \u7684\u4f4d\u7f6e\u3002"),(0,a.kt)("p",null,"\u770b\u4e00\u4e0b ",(0,a.kt)("inlineCode",{parentName:"p"},"SlotWriter#startGroup")," \u4e2d\u63d2\u5165\u4e00\u4e2a Group \u7684\u5b9e\u73b0\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"private fun startGroup(key: Int, objectKey: Any?, isNode: Boolean, aux: Any?) {\n\n    //...\n    insertGroups(1) // groups \u4e2d\u5206\u914d\u65b0\u7684\u4f4d\u7f6e\n    val current = currentGroup \n    val currentAddress = groupIndexToAddress(current)\n    val hasObjectKey = objectKey !== Composer.Empty\n    val hasAux = !isNode && aux !== Composer.Empty\n    groups.initGroup( //\u586b\u5145 Group \u4fe1\u606f\n        address = currentAddress, //Group \u7684\u63d2\u5165\u4f4d\u7f6e\n        key = key, //Group \u7684 key\n        isNode = isNode, //\u662f\u5426\u662f\u4e00\u4e2a Node \n        hasDataKey = hasObjectKey, //\u662f\u5426\u6709 DataKey\n        hasData = hasAux, //\u662f\u5426\u5305\u542b\u6570\u636e\n        parentAnchor = parent, //\u5173\u8054Parent\n        dataAnchor = currentSlot //\u5173\u8054Slot\u5730\u5740\n    )\n    //...\n    val newCurrent = current + 1\n    this.parent = current //\u66f4\u65b0parent\n    this.currentGroup = newCurrent \n    //...\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"insertGroups")," \u7528\u6765\u5728 groups \u4e2d\u5206\u914d\u63d2\u5165 Group \u7528\u7684\u7a7a\u95f4\uff0c\u8fd9\u91cc\u4f1a\u6d89\u53ca\u5230 Gap Buffer \u6982\u5ff5\uff0c\u6211\u4eec\u5728\u540e\u6587\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002 "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"initGroup"),"\uff1a\u57fa\u4e8e startGroup \u4f20\u5165\u7684\u53c2\u6570\u521d\u59cb\u5316 Group \u4fe1\u606f\u3002\u8fd9\u4e9b\u53c2\u6570\u90fd\u662f\u5728\u7f16\u8bd1\u671f\u968f\u7740\u4e0d\u540c\u7c7b\u578b\u7684 startXXXGroup \u751f\u6210\u7684\uff0c\u5728\u6b64\u5904\u771f\u6b63\u5199\u5165\u5230 SlotTable \u4e2d"),(0,a.kt)("li",{parentName:"ul"},"\u6700\u540e\u66f4\u65b0 currentGroup \u7684\u6700\u65b0\u4f4d\u7f6e\u3002")),(0,a.kt)("p",null,"\u518d\u770b\u4e00\u4e0b ",(0,a.kt)("inlineCode",{parentName:"p"},"SlotReader#startGroup")," \u7684\u5b9e\u73b0\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"fun startGroup() {\n    //...\n    parent = currentGroup\n    currentEnd = currentGroup + groups.groupSize(currentGroup)\n    val current = currentGroup++\n    currentSlot = groups.slotAnchor(current)\n    //...\n}\n")),(0,a.kt)("p",null,"\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u4e3b\u8981\u5c31\u662f\u66f4\u65b0 currentGroup\uff0ccurrentSlot \u7b49\u7684\u4f4d\u7f6e\u3002"),(0,a.kt)("p",null,"SlotTable \u901a\u8fc7 openWriter/openReader \u521b\u5efa writer/reader\uff0c\u4f7f\u7528\u7ed3\u675f\u9700\u8981\u8c03\u7528\u5404\u81ea\u7684 close \u5173\u95ed\u3002reader \u53ef\u4ee5 open \u591a\u4e2a\u540c\u65f6\u4f7f\u7528\uff0c\u800c writer \u540c\u4e00\u65f6\u95f4\u53ea\u80fd open \u4e00\u4e2a\u3002\u4e3a\u4e86\u907f\u514d\u53d1\u751f\u5e76\u53d1\u95ee\u9898\uff0c writer \u4e0e reader \u4e0d\u80fd\u540c\u65f6\u6267\u884c\uff0c\u6240\u4ee5\u5bf9 SlotTable \u7684 write \u64cd\u4f5c\u9700\u8981\u5ef6\u8fdf\u5230\u91cd\u7ec4\u540e\u8fdb\u884c\u3002\u56e0\u6b64\u6211\u4eec\u5728\u6e90\u7801\u4e2d\u770b\u5230\u5f88\u591a recordXXX \u65b9\u6cd5\uff0c\u4ed6\u4eec\u5c06\u5199\u64cd\u4f5c\u63d0\u4e3a\u4e00\u4e2a Change \u8bb0\u5f55\u5230 ChangeList\uff0c\u7b49\u5f85\u7ec4\u5408\u7ed3\u675f\u540e\u518d\u4e00\u5e76\u5e94\u7528\u3002"),(0,a.kt)("h1",{id:"6-slottable-\u53d8\u66f4\u5ef6\u8fdf\u751f\u6548"},"6. SlotTable \u53d8\u66f4\u5ef6\u8fdf\u751f\u6548"),(0,a.kt)("p",null,"Composer \u4e2d\u4f7f\u7528 changes \u8bb0\u5f55\u53d8\u52a8\u5217\u8868"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"//Composer.kt\ninternal class ComposerImpl {\n    //...\n    private val changes: MutableList<Change>,\n    //...\n    \n    private fun record(change: Change) {\n        changes.add(change)\n    }\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Change")," \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u6267\u884c\u5177\u4f53\u7684\u53d8\u52a8\u903b\u8f91\uff0c\u51fd\u6570\u7b7e\u540d\u5373\u53c2\u6570\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"//Composer.kt\ninternal typealias Change = (\n    applier: Applier<*>,\n    slots: SlotWriter,\n    rememberManager: RememberManager\n) -> Unit\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"applier"),"\uff1a \u4f20\u5165 Applier \u7528\u4e8e\u5c06\u53d8\u5316\u5e94\u7528\u5230 LayoutNode \u6811\uff0c\u5728\u540e\u6587\u8be6\u7ec6\u4ecb\u7ecd Applier"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"slots"),"\uff1a\u4f20\u5165 SlotWriter \u7528\u4e8e\u66f4\u65b0 SlotTable "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rememberManger"),"\uff1a\u4f20\u5165 RememberManager \u7528\u6765\u6ce8\u518c Composition \u751f\u547d\u5468\u671f\u56de\u8c03\uff0c\u53ef\u4ee5\u5728\u7279\u5b9a\u65f6\u95f4\u70b9\u5b8c\u6210\u7279\u5b9a\u4e1a\u52a1\uff0c\u6bd4\u5982 LaunchedEffect \u5728\u9996\u6b21\u8fdb\u5165 Composition \u65f6\u521b\u5efa CoroutineScope\uff0c DisposableEffect \u5728\u4ece Composition \u4e2d\u79bb\u5f00\u65f6\u8c03\u7528 onDispose \uff0c\u8fd9\u4e9b\u90fd\u662f\u901a\u8fc7\u5728\u8fd9\u91cc\u6ce8\u518c\u56de\u8c03\u5b9e\u73b0\u7684\u3002")),(0,a.kt)("h2",{id:"\u8bb0\u5f55-change"},"\u8bb0\u5f55 Change"),(0,a.kt)("p",null,"\u6211\u4eec\u4ee5 ",(0,a.kt)("inlineCode",{parentName:"p"},"remember{}")," \u4e3a\u4f8b\u770b\u4e00\u4e0b Change \u5982\u4f55\u88ab\u8bb0\u5f55\u3002\nremember{} \u7684 key \u548c value \u90fd\u4f1a\u4f5c\u4e3a Composition \u4e2d\u7684\u72b6\u6001\u8bb0\u5f55\u5230 SlotTable \u4e2d\u3002\u91cd\u7ec4\u4e2d\uff0c\u5f53 remember \u7684 key \u53d1\u751f\u53d8\u5316\u65f6\uff0cvalue \u4f1a\u91cd\u65b0\u8ba1\u7b97 value \u5e76\u66f4\u65b0 SlotTable\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'//Composables.kt\n@Composable\ninline fun <T> remember(\n    key1: Any?,\n    calculation: @DisallowComposableCalls () -> T\n): T {\n    return currentComposer.cache(currentComposer.changed(key1), calculation)\n}\n\n//Composer.kt\n@ComposeCompilerApi\ninline fun <T> Composer.cache(invalid: Boolean, block: () -> T): T {\n    @Suppress("UNCHECKED_CAST")\n    return rememberedValue().let {\n        if (invalid || it === Composer.Empty) {\n            val value = block()\n            updateRememberedValue(value)\n            value\n        } else it\n    } as T\n}\n\n')),(0,a.kt)("p",null,"\u5982\u4e0a\u662f remember \u7684\u6e90\u7801"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Composer#changed")," \u65b9\u6cd5\u4e2d\u4f1a\u8bfb\u53d6 SlotTable \u4e2d\u5b58\u50a8\u7684 key \u4e0e key1 \u8fdb\u884c\u6bd4\u8f83"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Composer#cache")," \u4e2d\uff0crememberedValue \u4f1a\u8bfb\u53d6 SlotTable \u4e2d\u7f13\u5b58\u7684\u5f53\u524d value\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u6b64\u65f6 key \u7684\u6bd4\u8f83\u4e2d\u53d1\u73b0\u4e86\u4e0d\u540c\uff0c\u5219\u8c03\u7528 block \u8ba1\u7b97\u5e76\u8fd4\u56de\u65b0\u7684 value\uff0c\u540c\u65f6\u8c03\u7528 updateRememberedValue \u5c06 value \u66f4\u65b0\u5230 SlotTable\u3002")),(0,a.kt)("p",null,"updateRememberedValue \u6700\u7ec8\u4f1a\u8c03\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"Composer#updateValue"),"\uff0c\u770b\u4e00\u4e0b\u5177\u4f53\u5b9e\u73b0\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"//Composer.kt\ninternal fun updateValue(value: Any?) {\n    //...\n    val groupSlotIndex = reader.groupSlotIndex - 1 //\u66f4\u65b0\u4f4d\u7f6eIndex\n    \n    recordSlotTableOperation(forParent = true) { _, slots, rememberManager ->\n        if (value is RememberObserver) {\n            rememberManager.remembering(value) \n        }\n        when (val previous = slots.set(groupSlotIndex, value)) {//\u66f4\u65b0\n            is RememberObserver ->\n                rememberManager.forgetting(previous)\n            is RecomposeScopeImpl -> {\n                val composition = previous.composition\n                if (composition != null) {\n                    previous.composition = null\n                    composition.pendingInvalidScopes = true\n                }\n            }\n        }\n    }\n    //...\n}\n\n//\u8bb0\u5f55\u66f4\u65b0 SlotTable \u7684 Change\n\nprivate fun recordSlotTableOperation(forParent: Boolean = false, change: Change) {\n    realizeOperationLocation(forParent)\n    record(change) //\u8bb0\u5f55 Change\n}\n")),(0,a.kt)("p",null,"\u8fd9\u91cc\u5173\u952e\u4ee3\u7801\u662f\u5bf9 ",(0,a.kt)("inlineCode",{parentName:"p"},"recordSlotTableOperation")," \u7684\u8c03\u7528\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5c06 Change \u52a0\u5165\u5230 changes \u5217\u8868\uff0c\u8fd9\u91cc Change \u7684\u5185\u5bb9\u662f\u901a\u8fc7 SlotWriter#set \u5c06 value \u66f4\u65b0\u5230 SlotTable \u7684\u6307\u5b9a\u4f4d\u7f6e\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"groupSlotIndex")," \u662f\u8ba1\u7b97\u51fa\u7684 value \u5728 slots \u4e2d\u7684\u504f\u79fb\u91cf\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"previous")," \u8fd4\u56de remember \u7684\u65e7 value \uff0c\u53ef\u7528\u6765\u505a\u4e00\u4e9b\u540e\u5904\u7406\u3002\u4ece\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c RememberObserver \u4e0e RecomposeScopeImpl \u7b49\u4e5f\u90fd\u662f Composition \u4e2d\u7684\u72b6\u6001\u3002",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"RememberObserver \u662f\u4e00\u4e2a\u751f\u547d\u5468\u671f\u56de\u8c03\uff0cRememberManager#forgetting \u5bf9\u5176\u8fdb\u884c\u6ce8\u518c\uff0c\u5f53 previous \u4ece Composition \u79fb\u9664\u65f6\uff0cRememberObserver \u4f1a\u6536\u5230\u901a\u77e5"),(0,a.kt)("li",{parentName:"ul"},"RecomposeScopeImpl \u662f\u53ef\u91cd\u7ec4\u7684\u5355\u5143\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"pendingInvalidScopes = true")," \u610f\u5473\u7740\u6b64\u91cd\u7ec4\u5355\u5143\u4ece Composition \u4e2d\u79bb\u5f00\u3002")))),(0,a.kt)("p",null,"\u9664\u4e86 remember\uff0c\u5176\u4ed6\u6d89\u53ca\u5230 SlotTable \u7ed3\u6784\u7684\u53d8\u5316\uff0c\u4f8b\u5982\u5220\u9664\u3001\u79fb\u52a8\u8282\u70b9\u7b49\u4e5f\u4f1a\u501f\u52a9 changes \u5ef6\u8fdf\u751f\u6548\uff08\u63d2\u5165\u64cd\u4f5c\u5bf9 reader \u6ca1\u6709\u5f71\u54cd\u4e0d\u5927\u6545\u4f1a\u7acb\u5373\u5e94\u7528\uff09\u3002\u4f8b\u5b50\u4e2d remember \u573a\u666f\u7684 Change \u4e0d\u6d89\u53ca LayoutNode \u7684\u66f4\u65b0\uff0c\u6240\u4ee5 recordSlotTableOperation \u4e2d\u6ca1\u6709\u4f7f\u7528\u5230 ",(0,a.kt)("inlineCode",{parentName:"p"},"Applier")," \u53c2\u6570\u3002\u4f46\u662f\u5f53\u79cd\u65cf\u9020\u6210 SlotTable \u7ed3\u6784\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u9700\u8981\u5c06\u53d8\u5316\u5e94\u7528\u5230 LayoutNoel \u6811\uff0c\u8fd9\u65f6\u5c31\u8981\u4f7f\u7528\u5230 Applier \u4e86\u3002"),(0,a.kt)("h2",{id:"\u5e94\u7528-change"},"\u5e94\u7528 Change"),(0,a.kt)("p",null,"\u524d\u9762\u63d0\u5230\uff0c\u88ab\u8bb0\u5f55\u7684 changes \u7b49\u5f85\u7ec4\u5408\u5b8c\u6210\u540e\u518d\u6267\u884c\u3002"),(0,a.kt)("p",null,"\u5f53 Composable \u9996\u6b21\u6267\u884c\u65f6\uff0c\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"Recomposer#composeIntial")," \u4e2d\u5b8c\u6210 Composable \u7684\u7ec4\u5408"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"//Composition.kt\noverride fun setContent(content: @Composable () -> Unit) {\n    //...\n    this.composable = content\n    parent.composeInitial(this, composable)\n}\n\n//Recomposer.kt\ninternal override fun composeInitial(\n    composition: ControlledComposition,\n    content: @Composable () -> Unit\n) {\n    //...\n    composing(composition, null) {\n        composition.composeContent(content) //\u6267\u884c\u7ec4\u5408\n    }\n    //...\n\n    composition.applyChanges() //\u5e94\u7528 Changes\n    //...\n}\n")),(0,a.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0c\u7d27\u8ddf\u5728\u7ec4\u5408\u4e4b\u540e\uff0c\u8c03\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"Composition#applyChanges()")," \u5e94\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"changes"),"\u3002\u540c\u6837\uff0c\u5728\u6bcf\u6b21\u91cd\u7ec4\u53d1\u751f\u540e\u4e5f\u4f1a\u8c03\u7528 applyChanges\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"override fun applyChanges() {\n      \n      val manager = ...\n      //...\n      applier.onBeginChanges()\n      // Apply all changes\n      slotTable.write { slots ->\n          val applier = applier\n          changes.fastForEach { change ->\n              change(applier, slots, manager)\n          }\n          hanges.clear()\n       }\n       applier.onEndChanges()\n       //...\n}\n")),(0,a.kt)("p",null,"\u5728 applyChanges \u5185\u90e8\u770b\u5230\u5bf9 changes \u7684\u904d\u5386\u548c\u6267\u884c\u3002 \u6b64\u5916\u8fd8\u4f1a\u901a\u8fc7 Applier \u56de\u8c03 applyChanges \u7684\u5f00\u59cb\u548c\u7ed3\u675f\u3002"),(0,a.kt)("h1",{id:"7-uiapplier--layoutnode"},"7. UiApplier & LayoutNode"),(0,a.kt)("p",null,"SlotTable \u7ed3\u6784\u7684\u53d8\u5316\u662f\u5982\u4f55\u53cd\u6620\u5230 LayoutNode \u6811\u4e0a\u7684\u5462\uff1f"),(0,a.kt)("p",null,"\u524d\u9762\u6211\u4eec\u5c06 Composable \u6267\u884c\u540e\u751f\u6210\u7684\u6e32\u67d3\u6811\u79f0\u4e3a Composition\u3002\u5176\u5b9e Composition \u662f\u5bf9\u8fd9\u4e00\u68f5\u6e32\u67d3\u6811\u7684\u5b8f\u89c2\u8ba4\u77e5\uff0c\u51c6\u786e\u6765\u8bf4 Composition \u5185\u90e8\u901a\u8fc7 Applier \u7ef4\u62a4\u7740 LayoutNode \u6811\u5e76\u6267\u884c\u5177\u4f53\u6e32\u67d3\u3002SlotTable \u7ed3\u6784\u7684\u53d8\u5316\u4f1a\u968f\u7740 Change \u5217\u8868\u7684\u5e94\u7528\u53cd\u6620\u5230 LayoutNode \u6811\u4e0a\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/e2ddca136e23529a9e038db72dfe21ea.png",alt:null})),(0,a.kt)("p",null,"\u50cf View \u4e00\u6837\uff0cLayoutNode \u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"measure/layout/draw")," \u7b49\u4e00\u7cfb\u5217\u65b9\u6cd5\u5b8c\u6210\u5177\u4f53\u6e32\u67d3\u3002\u6b64\u5916\u5b83\u8fd8\u63d0\u4f9b\u4e86 insertAt/removeAt \u7b49\u65b9\u6cd5\u5b9e\u73b0\u5b50\u6811\u7ed3\u6784\u7684\u53d8\u5316\u3002\u8fd9\u4e9b\u65b9\u6cd5\u4f1a\u5728 UiApplier \u4e2d\u8c03\u7528\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"//UiApplier.kt\ninternal class UiApplier(\n    root: LayoutNode\n) : AbstractApplier<LayoutNode>(root) {\n\n    override fun insertTopDown(index: Int, instance: LayoutNode) {\n        // Ignored\n    }\n\n    override fun insertBottomUp(index: Int, instance: LayoutNode) {\n        current.insertAt(index, instance)\n    }\n\n    override fun remove(index: Int, count: Int) {\n        current.removeAt(index, count)\n    }\n\n    override fun move(from: Int, to: Int, count: Int) {\n        current.move(from, to, count)\n    }\n\n    override fun onClear() {\n        root.removeAll()\n    }\n\n}\n")),(0,a.kt)("p",null,"UiApplier \u7528\u6765\u66f4\u65b0\u548c\u4fee\u6539 LayoutNode \u6811\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"down()/up()")," \u7528\u6765\u79fb\u52a8 current \u7684\u4f4d\u7f6e\uff0c\u5b8c\u6210\u6811\u4e0a\u7684\u5bfc\u822a\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"insertXXX/remove/move")," \u7528\u6765\u4fee\u6539\u6811\u7684\u7ed3\u6784\u3002\u5176\u4e2d ",(0,a.kt)("inlineCode",{parentName:"li"},"insertTopDown")," \u548c ",(0,a.kt)("inlineCode",{parentName:"li"},"insertBottomUp")," \u90fd\u7528\u6765\u63d2\u5165\u65b0\u8282\u70b9\uff0c\u53ea\u662f\u63d2\u5165\u7684\u65b9\u5f0f\u6709\u6240\u4e0d\u540c\uff0c\u4e00\u4e2a\u662f\u81ea\u4e0b\u800c\u4e0a\u4e00\u4e2a\u662f\u81ea\u9876\u800c\u4e0b\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u6811\u5f62\u7ed3\u6784\u9009\u62e9\u4e0d\u540c\u7684\u63d2\u5165\u987a\u5e8f\u6709\u52a9\u4e8e\u63d0\u9ad8\u6027\u80fd\u3002\u4f8b\u5982 Android \u7aef\u7684 UiApplier \u4e3b\u8981\u4f9d\u9760 insertBottomUp \u63d2\u5165\u65b0\u8282\u70b9\uff0c\u56e0\u4e3a Android \u7684\u6e32\u67d3\u903b\u8f91\u4e0b\uff0c\u5b50\u8282\u70b9\u7684\u53d8\u52a8\u4f1a\u5f71\u54cd\u7236\u8282\u70b9\u7684\u91cd\u65b0 measure\uff0c\u81ea\u6b64\u5411\u4e0b\u7684\u63d2\u5165\u53ef\u4ee5\u907f\u514d\u5f71\u54cd\u592a\u591a\u7684\u7236\u8282\u70b9\uff0c\u63d0\u9ad8\u6027\u80fd\uff0c\u56e0\u4e3a attach \u662f\u6700\u540e\u624d\u8fdb\u884c\u3002")),(0,a.kt)("p",null,"Composable \u7684\u6267\u884c\u8fc7\u7a0b\u53ea\u4f9d\u8d56 Applier \u62bd\u8c61\u63a5\u53e3\uff0cUiApplier \u4e0e LayoutNode \u53ea\u662f Android \u5e73\u53f0\u7684\u5bf9\u5e94\u5b9e\u73b0\uff0c\u7406\u8bba\u4e0a\u6211\u4eec\u901a\u8fc7\u81ea\u5b9a\u4e49 Applier \u4e0e Node \u53ef\u4ee5\u6253\u9020\u81ea\u5df1\u7684\u6e32\u67d3\u5f15\u64ce\u3002\u4f8b\u5982 Jake Wharton \u6709\u4e00\u4e2a\u540d\u4e3a Mosaic \u7684\u9879\u76ee\uff0c\u5c31\u662f\u901a\u8fc7\u81ea\u5b9a\u4e49 Applier \u548c Node \u5b9e\u73b0\u4e86\u81ea\u5b9a\u4e49\u7684\u6e32\u67d3\u903b\u8f91\u3002"),(0,a.kt)("h2",{id:"root-node\u7684\u521b\u5efa"},"Root Node\u7684\u521b\u5efa"),(0,a.kt)("p",null,"Android \u5e73\u53f0\u4e0b\uff0c\u6211\u4eec\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"Activity#setContent")," \u4e2d\u8c03\u7528 Composable\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"//Wrapper.android.kt\ninternal fun AbstractComposeView.setContent(\n    parent: CompositionContext,\n    content: @Composable () -> Unit\n): Composition {\n    //...\n    val composeView = ...\n    return doSetContent(composeView, parent, content)\n}\n\nprivate fun doSetContent(\n    owner: AndroidComposeView,\n    parent: CompositionContext,\n    content: @Composable () -> Unit\n): Composition {\n    //...\n    val original = Composition(UiApplier(owner.root), parent)\n    val wrapped = owner.view.getTag(R.id.wrapped_composition_tag)\n        as? WrappedComposition\n        ?: WrappedComposition(owner, original).also {\n            owner.view.setTag(R.id.wrapped_composition_tag, it)\n        }\n    wrapped.setContent(content)\n    return wrapped\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"doSetContent")," \u4e2d\u521b\u5efa Composition \u5b9e\u4f8b\uff0c\u540c\u65f6\u4f20\u5165\u4e86\u7ed1\u5b9a Root Node \u7684 Applier\u3002Root Node \u88ab ",(0,a.kt)("inlineCode",{parentName:"li"},"AndroidComposeView")," \u6301\u6709\uff0c\u6765\u81ea View \u4e16\u754c\u7684 dispatchDraw \u4ee5\u53ca ",(0,a.kt)("inlineCode",{parentName:"li"},"KeyEvent"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"touchEvent")," \u7b49\u5c31\u662f\u4ece\u8fd9\u91cc\u901a\u8fc7 Root Node \u4f20\u9012\u5230\u4e86 Compose \u4e16\u754c\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"WrappedComposition")," \u662f\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u4e5f\u662f\u7528\u6765\u4e3a Composition \u4e0e AndroidComposeView \u5efa\u7acb\u8fde\u63a5\uff0c\u6211\u4eec\u5e38\u7528\u7684\u5f88\u591a\u6765\u81ea Android \u7684 CompositionLocal \u5c31\u662f\u8fd9\u91cc\u6784\u5efa\u7684\uff0c\u6bd4\u5982 ",(0,a.kt)("inlineCode",{parentName:"li"},"LocalContext"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"LocalConfiguration")," \u7b49\u7b49\u3002")),(0,a.kt)("h1",{id:"8-slottable-\u4e0e-composable-\u751f\u547d\u5468\u671f"},"8. SlotTable \u4e0e Composable \u751f\u547d\u5468\u671f"),(0,a.kt)("p",null,"Composable \u7684\u751f\u547d\u5468\u671f\u53ef\u4ee5\u6982\u62ec\u4e3a\u4ee5\u4e0b\u4e09\u9636\u6bb5\uff0c\u73b0\u5728\u8ba4\u8bc6\u4e86 SlotTable \u4e4b\u540e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4ece SlotTable \u7684\u89d2\u5ea6\u5bf9\u5176\u8fdb\u884c\u89e3\u91ca\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/8d7dbd29a2acbb42bff661cc896fb875.png",alt:null})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Enter"),"\uff1astartRestartGroup \u4e2d\u5c06 Composable \u5bf9\u5e94\u7684 Group \u5b58\u5165 SlotTable"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Recompose"),"\uff1aSlotTable \u4e2d\u67e5\u627e Composable \uff08by RecomposeScopeImpl\uff09 \u91cd\u65b0\u6267\u884c\uff0c\u5e76\u66f4\u65b0 SlotTable"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Leave"),"\uff1aComposable \u5bf9\u5e94\u7684 Group \u4ece SlotTable \u4e2d\u79fb\u9664\u3002")),(0,a.kt)("p",null,"\u5728 Composable \u4e2d\u4f7f\u7528\u526f\u4f5c\u7528 API \u53ef\u4ee5\u5145\u5f53 Composable \u751f\u547d\u5468\u671f\u56de\u8c03\u6765\u4f7f\u7528"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"DisposableEffect(Unit) {\n    //callback when entered the Composition & recomposed\n    onDispose { \n        //callback for leaved the Composition\n    }\n}\n")),(0,a.kt)("p",null,"\u6211\u4eec\u4ee5 DisposableEffect \u4e3a\u4f8b\uff0c\u770b\u4e00\u4e0b\u751f\u547d\u5468\u671f\u56de\u8c03\u662f\u5982\u4f55\u57fa\u4e8e SlotTable \u7cfb\u7edf\u5b8c\u6210\u7684\u3002 \u770b\u4e00\u4e0b DisposableEffect \u7684\u5b9e\u73b0\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Composable\n@NonRestartableComposable\nfun DisposableEffect(\n    key1: Any?,\n    effect: DisposableEffectScope.() -> DisposableEffectResult\n) {\n    remember(key1) { DisposableEffectImpl(effect) }\n}\n\n\nprivate class DisposableEffectImpl(\n    private val effect: DisposableEffectScope.() -> DisposableEffectResult\n) : RememberObserver {\n    private var onDispose: DisposableEffectResult? = null\n\n    override fun onRemembered() {\n        onDispose = InternalDisposableEffectScope.effect()\n    }\n\n    override fun onForgotten() {\n        onDispose?.dispose()\n        onDispose = null\n    }\n\n    override fun onAbandoned() {\n        // Nothing to do as [onRemembered] was not called.\n    }\n}\n")),(0,a.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0cDisposableEffect \u7684\u672c\u8d28\u5c31\u662f\u4f7f\u7528 remember \u5411 SlotTable \u5b58\u5165\u4e00\u4e2a DisposableEffectImpl\uff0c\u8fd9\u662f\u4e00\u4e2a RememberObserver \u7684\u5b9e\u73b0\u3002 DisposableEffectImpl \u968f\u7740\u7236 Group \u8fdb\u5165\u548c\u79bb\u5f00 SlotTable \uff0c\u5c06\u63a5\u6536\u5230 ",(0,a.kt)("inlineCode",{parentName:"p"},"onRemembered")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"onForgotten")," \u7684\u56de\u8c03\u3002"),(0,a.kt)("p",null,"\u8fd8\u8bb0\u5f97\u524d\u9762\u8bb2\u8fc7\u7684 applyChanges \u5417\uff0c\u5b83\u53d1\u751f\u5728\u91cd\u7ec4\u5b8c\u6210\u4e4b\u540e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"override fun applyChanges() {\n      \n  val manager = ... // \u521b\u5efa RememberManager\n  //...\n  // Apply all changes\n  slotTable.write { slots ->\n      //...\n      changes.fastForEach { change ->\n          //\u5e94\u7528 changes, \u5c06 ManagerObserver \u6ce8\u518c\u8fdb RememberMananger\n          change(applier, slots, manager)\n      }\n      //...\n  }\n  //...\n  manager.dispatchRememberObservers() //\u5206\u53d1\u56de\u8c03\n}\n")),(0,a.kt)("p",null,"\u524d\u9762\u4e5f\u63d0\u5230\uff0cSlotTable \u5199\u64cd\u4f5c\u4e2d\u53d1\u751f\u7684 changes \u5c06\u5728\u8fd9\u91cc\u7edf\u4e00\u5e94\u7528\uff0c\u5f53\u7136\u4e5f\u5305\u62ec\u4e86 DisposableEffectImpl \u63d2\u5165/\u5220\u9664\u65f6 record \u7684 changes\uff0c\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u5bf9 ManagerObserver \u7684\u6ce8\u518c\uff0c\u4f1a\u5728\u540e\u9762\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"dispatchRememberObservers")," \u4e2d\u8fdb\u884c\u56de\u8c03\u3002"),(0,a.kt)("h2",{id:"\u91cd\u7ec4\u662f\u4e50\u89c2\u7684"},"\u91cd\u7ec4\u662f\u4e50\u89c2\u7684"),(0,a.kt)("p",null,"\u5b98\u7f51\u6587\u6863\u4e2d\u5728\u4ecb\u7ecd\u91cd\u7ec4\u6709\u8fd9\u6837\u4e00\u6bb5\u8bdd\uff1a\u91cd\u7ec4\u662f\u201c\u4e50\u89c2\u201d\u7684"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"When recomposition is canceled, Compose discards the UI tree from the recomposition. If you have any side-effects that depend on the UI being displayed, the side-effect will be applied even if composition is canceled. This can lead to inconsistent app state. Ensure that all composable functions and lambdas are idempotent and side-effect free to handle optimistic recomposition.",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"https://developer.android.com/jetpack/compose/mental-model#optimistic"},"https://developer.android.com/jetpack/compose/mental-model#optimistic"))),(0,a.kt)("p",null,"\u5f88\u591a\u4eba\u521d\u770b\u8fd9\u6bb5\u8bdd\u4f1a\u4e0d\u660e\u6240\u4ee5\uff0c\u4f46\u662f\u5728\u89e3\u8bfb\u4e86\u6e90\u7801\u4e4b\u540e\u76f8\u4fe1\u80fd\u591f\u7406\u89e3\u5b83\u7684\u542b\u4e49\u4e86\u3002\u8fd9\u91cc\u6240\u8c13 \u201c\u4e50\u89c2\u201d \u662f\u6307 Compose \u7684\u91cd\u7ec4\u603b\u662f\u5047\u5b9a\u4e0d\u4f1a\u88ab\u4e2d\u65ad\uff0c\u4e00\u65e6\u53d1\u751f\u4e86\u4e2d\u65ad\uff0cComposable \u4e2d\u6267\u884c\u7684\u64cd\u4f5c\u5e76\u4e0d\u4f1a\u771f\u6b63\u53cd\u6620\u5230 SlotTable\uff0c\u56e0\u4e3a\u901a\u8fc7\u6e90\u7801\u6211\u4eec\u77e5\u9053\u4e86 applyChanges \u53d1\u751f\u5728 composiiton \u6210\u529f\u7ed3\u675f\u4e4b\u540e\u3002"),(0,a.kt)("p",null,"\u5982\u679c\u7ec4\u5408\u88ab\u4e2d\u65ad\uff0c\u4f60\u5728 Composable \u51fd\u6570\u4e2d\u8bfb\u53d6\u7684\u72b6\u6001\u5f88\u53ef\u80fd\u548c\u6700\u7ec8 SlotTable \u4e2d\u7684\u4e0d\u4e00\u81f4\u3002\u56e0\u6b64\u5982\u679c\u6211\u4eec\u9700\u8981\u57fa\u4e8e Composition \u7684\u72b6\u6001\u8fdb\u884c\u4e00\u4e9b\u526f\u4f5c\u7528\u5904\u7406\uff0c\u5fc5\u987b\u8981\u4f7f\u7528 DisposableEffect \u8fd9\u6837\u7684\u526f\u4f5c\u7528 API \u5305\u88f9\uff0c\u56e0\u4e3a\u901a\u8fc7\u6e90\u7801\u6211\u4eec\u4e5f\u77e5\u9053\u4e86 DisposableEffect \u7684\u56de\u8c03\u662f applyChanges \u6267\u884c\u7684\uff0c\u6b64\u65f6\u53ef\u4ee5\u786e\u4fdd\u91cd\u7ec4\u5df2\u7ecf\u5b8c\u6210\uff0c\u83b7\u53d6\u7684\u72b6\u6001\u4e0e SlotTable \u76f8\u4e00\u81f4\u3002"),(0,a.kt)("h1",{id:"9-slottable-\u4e0e-gapbuffer"},"9. SlotTable \u4e0e GapBuffer"),(0,a.kt)("p",null,"\u524d\u9762\u4ecb\u7ecd\u8fc7\uff0cstartXXXGroup \u4e2d\u4f1a\u4e0e SlotTable \u4e2d\u7684 Group \u8fdb\u884c Diff\uff0c\u5982\u679c\u6bd4\u8f83\u4e0d\u76f8\u7b49\uff0c\u5219\u610f\u5473\u7740 SlotTable \u7684\u7ed3\u6784\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u9700\u8981\u5bf9 Group \u8fdb\u884c\u63d2\u5165/\u5220\u9664/\u79fb\u52a8\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u57fa\u4e8e Gap Buffer \u5b9e\u73b0\u7684\u3002"),(0,a.kt)("p",null,"Gap Buffer \u6982\u5ff5\u6765\u81ea\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5c06\u5b83\u7406\u89e3\u4e3a\u7ebf\u6027\u6570\u7ec4\u4e2d\u53ef\u6ed1\u52a8\u3001\u53ef\u4f38\u7f29\u7684\u7f13\u5b58\u533a\u57df\uff0c\u5177\u4f53\u5230 SlotTable \u4e2d\uff0c\u5c31\u662f groups \u4e2d\u7684\u672a\u4f7f\u7528\u7684\u533a\u57df\uff0c\u8fd9\u6bb5\u533a\u57df\u53ef\u4ee5\u5728 groups \u79fb\u52a8\uff0c\u63d0\u5347 SlotTble \u7ed3\u6784\u53d8\u5316\u65f6\u7684\u66f4\u65b0\u6548\u7387\uff0c\u4ee5\u4e0b\u4e3e\u4f8b\u8bf4\u660e\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Composable\nfun Test(condition: Boolean) { \n    if (condition) {\n        Node1()\n        Node2()\n    }\n    Node3()\n    Node4()\n}\n")),(0,a.kt)("p",null,"SlotTable \u521d\u59cb\u53ea\u6709 Node3\uff0cNode4\uff0c\u800c\u540e\u6839\u636e\u72b6\u6001\u53d8\u5316\uff0c\u9700\u8981\u63d2\u5165 Node1\uff0cNode2\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5982\u679c\u6ca1\u6709 Gap Buffer\uff0cSlotTable \u7684\u53d8\u5316\u5982\u4e0b\u56fe\u6240\u793a\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/5dbd132d7d7817fae27ecefc7532f409.png",alt:null})),(0,a.kt)("p",null,"\u6bcf\u6b21\u63d2\u5165\u65b0 Node \u90fd\u4f1a\u5bfc\u81f4 SlotTable \u4e2d\u5df2\u6709 Node \u7684\u79fb\u52a8\uff0c\u6548\u7387\u4f4e\u4e0b\u3002\u518d\u770b\u4e00\u4e0b\u5f15\u5165 Gap Buffer \u4e4b\u540e\u7684\u884c\u4e3a\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/4fb7c56e1dc7637e87e276210a1bb476.png",alt:null})),(0,a.kt)("p",null,"\u5f53\u63d2\u5165\u65b0 Node \u65f6\uff0c\u4f1a\u5c06\u6570\u7ec4\u4e2d\u7684 Gap \u79fb\u52a8\u5230\u5f85\u63d2\u5165\u4f4d\u7f6e\uff0c\u7136\u540e\u518d\u5f00\u59cb\u63d2\u5165\u65b0 Node\u3002\u518d\u63d2\u5165 Node1\uff0cNode2 \u751a\u81f3\u5b83\u4eec\u7684\u5b50 Node\uff0c\u90fd\u662f\u5728\u586b\u5145 Gap \u7684\u7a7a\u95f2\u533a\u57df\uff0c\u4e0d\u4f1a\u5f71\u54cd\u9020\u6210 Node \u7684\u79fb\u52a8\u3002\n\u770b\u4e00\u4e0b\u79fb\u52a8 Gap \u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"//SlotTable.kt\nprivate fun moveGroupGapTo(index: Int) {\n\n    //...\n            val groupPhysicalAddress = index * Group_Fields_Size\n            val groupPhysicalGapLen = gapLen * Group_Fields_Size\n            val groupPhysicalGapStart = gapStart * Group_Fields_Size\n            if (index < gapStart) {\n                groups.copyInto(\n                    destination = groups,\n                    destinationOffset = groupPhysicalAddress + groupPhysicalGapLen,\n                    startIndex = groupPhysicalAddress,\n                    endIndex = groupPhysicalGapStart\n                )\n            } \n      //...     \n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Index")," \u662f\u8981\u63d2\u5165 Group \u7684\u4f4d\u7f6e\uff0c\u5373\u9700\u8981\u5c06 Gap \u79fb\u52a8\u5230\u6b64\u5904"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Group_Fields_Size")," \u662f groups \u4e2d\u5355\u4f4d Group \u7684\u957f\u5ea6\uff0c\u76ee\u524d\u662f\u5e38\u91cf 5\u3002")),(0,a.kt)("p",null,"\u51e0\u4e2a\u4e34\u65f6\u53d8\u91cf\u7684\u542b\u4e49\u4e5f\u975e\u5e38\u6e05\u6670\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"groupPhysicalAddress"),": \u5f53\u524d\u9700\u8981\u63d2\u5165 group \u7684\u5730\u5740"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"groupPhysicalGapLen"),": \u5f53\u524dGap \u7684\u957f\u5ea6"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"groupPhysicalGapStart"),"\uff1a\u5f53\u524dGap \u7684\u8d77\u59cb\u5730\u5740")),(0,a.kt)("p",null,"\u5f53 ",(0,a.kt)("inlineCode",{parentName:"p"},"index < gapState")," \u65f6\uff0c\u9700\u8981\u5c06 Gap \u524d\u79fb\u5230 index \u4f4d\u7f6e\u4e3a\u65b0\u63d2\u5165\u505a\u51c6\u5907\u3002\u4ece\u540e\u9762\u7d27\u8ddf\u7684 copyInto \u7684\u53c2\u6570\u53ef\u77e5\uff0cGap \u7684\u524d\u79fb\u5b9e\u9645\u662f\u901a\u8fc7 group \u540e\u79fb\u5b9e\u73b0\u7684\uff0c\u5373\u5c06 startIndex \u5904\u7684 Node \u590d\u5236\u5230 Gap \u7684\u65b0\u4f4d\u7f6e\u4e4b\u540e \uff0c\u5982\u4e0b\u56fe\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/ff5d6d665884bdd1dded38e76d6aee6a.png",alt:null})),(0,a.kt)("p",null,"\u8fd9\u6837\u6211\u4eec\u4e0d\u9700\u8981\u771f\u7684\u79fb\u52a8 Gap\uff0c\u53ea\u8981\u5c06 Gap \u7684 start \u7684\u6307\u9488\u79fb\u52a8\u5230 ",(0,a.kt)("inlineCode",{parentName:"p"},"groupPyhsicalAddress")," \u5373\u53ef\uff0c\u65b0\u7684 Node1 \u5c06\u5728\u6b64\u5904\u63d2\u5165\u3002\u5f53\u7136\uff0cgroups \u79fb\u52a8\u4e4b\u540e\uff0canchor \u7b49\u5173\u8054\u4fe1\u606f\u4e5f\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u66f4\u65b0\u3002"),(0,a.kt)("p",null,"\u6700\u540e\u518d\u770b\u4e00\u4e0b\u5220\u9664 Node \u65f6\u7684 Gap \u79fb\u52a8\u60c5\u51b5\uff0c\u539f\u7406\u4e5f\u662f\u7c7b\u4f3c\u7684\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/30af15dab755351e261a0800c04e7a0f.png",alt:null})),(0,a.kt)("p",null,"\u5c06 Gap \u79fb\u52a8\u5230\u5f85\u5220\u9664 Group \u4e4b\u524d\uff0c\u7136\u540e\u5f00\u59cb\u5220\u9664 Node\uff0c\u8fd9\u6837\uff0c\u5220\u9664\u8fc7\u7a0b\u5176\u5b9e\u5c31\u662f\u79fb\u52a8 Gap \u7684 end \u4f4d\u7f6e\u800c\u5df2\uff0c\u6548\u7387\u5f88\u9ad8\u800c\u4e14\u4fdd\u8bc1\u4e86 Gap \u7684\u8fde\u7eed\u3002"),(0,a.kt)("h1",{id:"10--\u603b\u7ed3"},"10.  \u603b\u7ed3"),(0,a.kt)("p",null,"SlotTable \u7cfb\u7edf\u662f Compose \u4ece\u7ec4\u5408\u5230\u6e32\u67d3\u5230\u5c4f\u5e55\uff0c\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u7684\u6700\u91cd\u8981\u73af\u8282\uff0c\u7ed3\u5408\u4e0b\u9762\u7684\u56fe\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u6574\u4e2a\u6d41\u7a0b\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/img_convert/34dd8e2b6633bfe2b2c2f9d51e2fcbe8.png",alt:null})),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Composable \u6e90\u7801\u5728\u7f16\u8bd1\u671f\u4f1a\u88ab\u63d2\u5165 startXXXGroup/endXXXGroup \u6a21\u677f\u4ee3\u7801\uff0c\u7528\u4e8e\u5bf9 SlotTable \u7684\u6811\u5f62\u904d\u5386\u3002"),(0,a.kt)("li",{parentName:"ol"},"Composable \u9996\u6b21\u7ec4\u5408\u4e2d\uff0cstartXXXGroup \u5728 SlotTable \u4e2d\u63d2\u5165 Group \u5e76\u901a\u8fc7 $key \u8bc6\u522b Group \u5728\u4ee3\u7801\u4e2d\u7684\u4f4d\u7f6e"),(0,a.kt)("li",{parentName:"ol"},"\u91cd\u7ec4\u4e2d\uff0cstartXXXGroup \u4f1a\u5bf9 SlotTable \u8fdb\u884c\u904d\u5386\u548c Diff\uff0c\u5e76\u901a\u8fc7 changes \u5ef6\u8fdf\u66f4\u65b0 SlotTable\uff0c\u540c\u65f6\u5e94\u7528\u5230 LayoutNode \u6811"),(0,a.kt)("li",{parentName:"ol"},"\u6e32\u67d3\u5e27\u5230\u8fbe\u65f6\uff0cLayoutNode \u9488\u5bf9\u53d8\u66f4\u90e8\u5206\u8fdb\u884c measure > layout > draw\uff0c\u5b8c\u6210 UI \u7684\u5c40\u90e8\u5237\u65b0\u3002")))}m.isMDXComponent=!0}}]);